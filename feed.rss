<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Tue, 20 Jun 2023 10:37:10 -0400</lastBuildDate>
<pubDate>Tue, 20 Jun 2023 10:37:10 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Deleting Blank Lines Using Grep
</title><description><![CDATA[
<p>If you have a file (or a stream) that has blank lines you want to
remove, you can use this command:</p>
<blockquote>
<p><code>$ grep -v "^ *$" file-with-blanks.txt &gt; output-file.txt</code></p>
</blockquote>
<p>where <code>file-with-blanks.txt</code> is the input file and has
blank lines and <code>output-file.txt</code> will be the output file
without the blank lines.</p>
<p>You have to keep the <code>space</code> between the <code>^</code>
and the <code>*$</code> otherwise blank lines which include spaces will
not be removed.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_grep.html'>grep</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/deleting-blank-lines-using-grep16496.html</link>
<guid>http://www.szumowski.org/./deleting-blank-lines-using-grep16496.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 20 Jun 2023 10:35:38 -0400</pubDate></item>
<item><title>
Convert webm to mp4
</title><description><![CDATA[
<p>You can use ffmpeg to convert webm to mp4 on the command line very
easily:</p>
<blockquote>
<p><code>$ ffmpeg -i file.webm -c copy file.mp4</code><br/></p>
</blockquote>
<p>This will stream copy (re-mux) and avoid re-encoding.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ffmpeg.html'>ffmpeg</a>, <a href='tag_webm.html'>webm</a>, <a href='tag_mp4.html'>mp4</a>, <a href='tag_convert.html'>convert</a>, <a href='tag_video.html'>video</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/convert-webm-to-mp429535.html</link>
<guid>http://www.szumowski.org/./convert-webm-to-mp429535.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 19 Jun 2023 11:12:17 -0400</pubDate></item>
<item><title>
Install KDbg - A KDE gdb GUI on Slackware 15.0
</title><description><![CDATA[
<p>What is KDbg?</p>
<p>From the <a href="https://www.kdbg.org/">homepage</a>:</p>
<p>KDbg is a graphical user interface to gdb, the GNU debugger. It
provides an intuitive interface for setting breakpoints, inspecting
variables, and stepping through code.</p>
<p>KDbg requires KDE, the K Desktop Environment, but you can of course
debug any program.</p>
<p>Here’s how to install it on Slackware 15 but this should work on any
system that has KDE:</p>
<blockquote>
<p><code>$ git clone -b maint https://github.com/j6t/kdbg.git</code><br/>
<code>$ cd kdbg/</code><br/> <code>$ cmake .</code><br/>
<code>$ make</code><br/> <code>$ su -c "make install"</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_debugging.html'>debugging</a>, <a href='tag_gdb.html'>gdb</a>, <a href='tag_kde.html'>kde</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-kdbg---a-kde-gdb-gui-on-slackware-150.html</link>
<guid>http://www.szumowski.org/./install-kdbg---a-kde-gdb-gui-on-slackware-150.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 18 Jun 2023 10:39:29 -0400</pubDate></item>
<item><title>
Exporting your Pocket List Data
</title><description><![CDATA[
<p>The links you save to your Pocket are stored on Pocket’s servers. In
other words, they’re stored “in the cloud”.</p>
<p>This means that your List will be available on any computer or mobile
device (phone or tablet) that is connected to your Pocket account. To
log in to Pocket, please visit our website or download any of our mobile
apps, then log in with your Pocket username and password.</p>
<p>Because your List is stored in the cloud, you do not need to create
special backups of your saved Pocket items. However, If you wish to
download your list for other uses you can use our export tool which
creates a downloadable HTML file with your List and Archive.</p>
<p>To access our export tool, click here:</p>
<blockquote>
<p><code>http://getpocket.com/export</code></p>
</blockquote>
<p>Then click on the <code>Export HTML file</code> link to download your
Pocket data.</p>
<p>Tags: <a href='tag_pocket.html'>pocket</a>, <a href='tag_bookmarks.html'>bookmarks</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/exporting-your-pocket-list-data2865.html</link>
<guid>http://www.szumowski.org/./exporting-your-pocket-list-data2865.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 17 Jun 2023 10:46:08 -0400</pubDate></item>
<item><title>
Parsing Bitwarden CLI
</title><description><![CDATA[
<p>If you use the excellent Bitwarden app for you password storage you
may not be aware that they also have a command line version on Linux. It
outputs data using the JSON format. You can install the <code>jq</code>
JSON parser and pipe the output of the CLI’s query to it in order to
extract the username and password for a specific site in your
search:</p>
<blockquote>
<p><code>$ bw list items --search accounts.google.com | jq '.[] | .login.uris[].uri,.login.username,.login.password'</code><br/>
<code>"https://accounts.google.com"</code><br/>
<code>"john.doe@gmail.com"</code><br/>
<code>"** password1 **"</code><br/>
<code>"https://accounts.google.com"</code><br/>
<code>"jdoe@gmail.com"</code><br/>
<code>"** password2 **"</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_bitwarden.html'>bitwarden</a>, <a href='tag_json.html'>json</a>, <a href='tag_password-managers.html'>password-managers</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/parsing-bitwarden-cli4247.html</link>
<guid>http://www.szumowski.org/./parsing-bitwarden-cli4247.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 15 Jun 2023 18:40:52 -0400</pubDate></item>
<item><title>
Export VirtualBox VDI using CLI
</title><description><![CDATA[
<p>Sometimes you may want to move a virtual machine in VirtualBox from
one server to another. Once way of doing that is to export it from the
command line.</p>
<ol type="1">
<li>Locate the virtual machine that you want to export (I’ll use the
name UbuntuServer for the one to be exported and name the new one
UbuntuServerNew), and then</li>
<li>Run the export command as follows:</li>
</ol>
<blockquote>
<p><code>$ vboxmanage export UbuntuServer -o UbuntuServerNew.ova</code></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_virtualization.html'>virtualization</a>, <a href='tag_virtualbox.html'>virtualbox</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/export-virtualbox-vdi-using-cli1819.html</link>
<guid>http://www.szumowski.org/./export-virtualbox-vdi-using-cli1819.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 14 Jun 2023 16:30:29 -0400</pubDate></item>
<item><title>
Install mimic Text-To-Speech on Slackware 15
</title><description><![CDATA[
<p>Per the manpage: Mimic is a command line tool for synthesizing speech
from text. If outfile.wav is omitted mimic will output the utterance
using the computer sound card.</p>
<p>Mimic is based on <a href="http://www.cmuflite.org">flite</a> and
strives to extend functionality and add more languages while keeping the
application fast and light.</p>
<p>Mandatory arguments to long options are mandatory for short options
too.</p>
<blockquote>
<p><code>$  git clone https://github.com/MycroftAI/mimic1.git</code><br/>
<code>$  cd mimic1/</code><br/>
<code>$  ./dependencies.sh --prefix="/usr/local"</code><br/>
<code>$  ./autogen.sh</code><br/>
<code>$  ./configure --prefix="/usr/local"</code><br/>
<code>$  make</code><br/> <code>$  make check</code><br/>
<code>$  su -c "make install"</code><br/></p>
</blockquote>
<p>You can list the default voices that are installed with
<code>mimic</code> by passing it the <code>-lv</code> command line
parameter.</p>
<blockquote>
<p><code>$ mimic -lv</code><br/>
<code>Voices available: ap slt slt_hts kal awb kal16 rms awb_time</code><br/></p>
</blockquote>
<p>Which tells you that there are 8 voices available.</p>
<p>You should now be able to do some testing at the command line:</p>
<blockquote>
<p><code>$  mimic -t "Hello world"</code><br/>
<code>$  mimic -t "Hello world"</code><br/>
<code>$  mimic -t 'Hello, this is a test of the emergency broadcasting system'</code><br/>
<code>$  mimic -t 'Hello, this is a test of the emergency broadcasting system' -voice slt</code><br/></p>
</blockquote>
<p>See the manpage for more info and options.</p>
<p>Tags: <a href='tag_text-to-speech.html'>text-to-speech</a>, <a href='tag_mimic.html'>mimic</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-mimic-text-to-speech-on-slackware-1526910.html</link>
<guid>http://www.szumowski.org/./install-mimic-text-to-speech-on-slackware-1526910.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 13 Jun 2023 21:19:44 -0400</pubDate></item>
<item><title>
Install svox Package on Slackware 15.0 for Better Text-to-Speech
</title><description><![CDATA[
<p>I was having issues finding a good voice synthesis for Foliate to
read my books to me. I have always had issues with the sound of the
<code>espeak</code> and <code>espeak-ng</code> voices. So I was
searching for an alternative. I couldn’t find a way to build
<code>festival</code> on Slackware (yet) but while searching around
found a package called <code>svox</code> that had a SlackBuild so I
thought I’d give it a try.</p>
<ol type="1">
<li>Install the <code>svox</code> SlackBuild package using whatever
tools you would normally use. I happen to use <code>sbotools</code>
which make use of the packages maintained by Ponce.</li>
<li>You will end up with a binary called <code>pico2audio</code> which
is the program you need to perform all of your text-to-speech needs. See
<code>pico2audio --help</code> for details (there aren’t really
many).</li>
</ol>
<p>It was simpler than I thought. Just open Foliate, Settings (the
hamburger menu), Preferences and then enter <code>pico2audio</code> in
the <code>Text-to-Speech Command</code> box and you’re done.</p>
<p>Tags: <a href='tag_svox.html'>svox</a>, <a href='tag_text-to-speech.html'>text-to-speech</a>, <a href='tag_audio.html'>audio</a>, <a href='tag_pico2audio.html'>pico2audio</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-svox-package-on-slackware-150-for-better-text-to-speech.html</link>
<guid>http://www.szumowski.org/./install-svox-package-on-slackware-150-for-better-text-to-speech.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 12 Jun 2023 20:44:52 -0400</pubDate></item>
<item><title>
Bulk Change of File Extensions in Directory
</title><description><![CDATA[
<p>If you have a directory of files where you want to change all of the
file extensions you may find this code snippet useful to rename
them:</p>
<blockquote>
<p><code>for i in *.tmp</code><br/> <code>do</code><br/>
<code>mv ${i} ${i%.*}.txt</code><br/> <code>done</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_bash.html'>bash</a>, <a href='tag_rename.html'>rename</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/bulk-change-of-file-extensions-in-directory32717.html</link>
<guid>http://www.szumowski.org/./bulk-change-of-file-extensions-in-directory32717.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 11 Jun 2023 11:25:59 -0400</pubDate></item>
<item><title>
Rename Files Downloaded Using youtube-dl
</title><description><![CDATA[
<p>If you have used <code>youtube-dl</code> to download content from
YouTube then you know that the file names can get to be rather long. In
addition to the video’s title there is a dash followed by what appears
to be a random sequence of characters just before the file extension. If
you find this to be annoying then here is a code snippet that you can
use to remove it.</p>
<p>This will remove the last field separated by a ‘-’ and replace it
with the file extension of your choice, .mp4 is used in this
example:</p>
<blockquote>
<p><code>#!/bin/bash</code><br/> <code>for i in *.mp4</code><br/>
<code>do</code><br/>
<code># Remove everything from the last hyphen to the end</code><br/>
<code>file="${i%-*}"</code><br/>
<code># Rename the file and remove the space between 'file'</code><br/>
<code># and the file extension on the fly</code><br/>
<code>mv "${i}" "${file%%*( )}.mp4"</code><br/>
<code>done</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_youtube.html'>youtube</a>, <a href='tag_renaming.html'>renaming</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/rename-files-downloaded-using-youtube-dl10234.html</link>
<guid>http://www.szumowski.org/./rename-files-downloaded-using-youtube-dl10234.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 10 Jun 2023 16:30:00 -0400</pubDate></item>
</channel></rss>
