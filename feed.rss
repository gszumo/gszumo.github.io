<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Tue, 04 Jul 2023 11:18:08 -0400</lastBuildDate>
<pubDate>Tue, 04 Jul 2023 11:18:08 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Red Hat Subscription Service
</title><description><![CDATA[
<p>Once you have installed RHEL 9, register your RHEL subscription by
running the following command on the terminal. The username and password
are the login details to your Red Hat account.</p>
<blockquote>
<p><code>$ sudo subscription-manager register --username=username --password=password</code><br/></p>
</blockquote>
<p>To confirm that the system is registered to Red Hat Subscription
Management (RHSM), run the command:</p>
<blockquote>
<p><code>$ sudo subscription-manager list --installed</code><br/></p>
</blockquote>
<p>Then refresh and subscribe:</p>
<blockquote>
<p><code>$ sudo subscription-manager refresh</code><br/>
<code>$ sudo subscription-manager attach --auto</code><br/></p>
</blockquote>
<p>Or, list the subscriptions that are available:</p>
<blockquote>
<p><code>$ subscription-manager list --available --all</code><br/>
<code>$ subscription-manager attach --pool=&lt;POOL_ID&gt;</code><br/></p>
</blockquote>
<p>Unregistering a system:</p>
<blockquote>
<p><code>$ subscription-manager remove --all</code><br/>
<code>$ subscription-manager unregister</code><br/>
<code>$ subscription-manager clean</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/red-hat-subscription-service27393.html</link>
<guid>http://www.szumowski.org/./red-hat-subscription-service27393.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 04 Jul 2023 11:18:03 -0400</pubDate></item>
<item><title>
Speed Up DNF Package Manager
</title><description><![CDATA[
<p>You can increase the download speed for installing packages using DNF
by updating the maximum number of simultaneous package downloads.</p>
<p>Start by editing the <code>/etc/dnf/dnf.conf</code> file:</p>
<blockquote>
<p><code>$ sudo nano /etc/dnf/dnf.conf</code><br/></p>
</blockquote>
<p>Add the following line to enable DNF parallel downloads:</p>
<blockquote>
<p><code>max_parallel_downloads=10</code><br/></p>
</blockquote>
<p>Another option is to select the fastest mirror from the Fedora public
mirrors by adding the following line:</p>
<blockquote>
<p><code>fastestmirror=True</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_dnf.html'>dnf</a>, <a href='tag_fedora.html'>fedora</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_package-managers.html'>package-managers</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/speed-up-dnf-package-manager7346.html</link>
<guid>http://www.szumowski.org/./speed-up-dnf-package-manager7346.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 03 Jul 2023 17:28:52 -0400</pubDate></item>
<item><title>
Creating a Python requirements.txt File
</title><description><![CDATA[
<p>This can be done quickly by typing:</p>
<blockquote>
<p><code>$ pip freeze &gt;requirements.txt</code><br/></p>
</blockquote>
<p>at the command line.</p>
<p>To install packages using a <code>requirements</code> file just use
<code>pip</code>:</p>
<blockquote>
<p><code>$ pip install -r requirements.txt</code><br/></p>
</blockquote>
<p>To check if the packages in your <code>requirements.txt</code> file
are up-to-date use:</p>
<blockquote>
<p><code>$ pip list --outdated</code><br/></p>
</blockquote>
<p>and to update those packages:</p>
<blockquote>
<p><code>$ pip install -U &lt;packagename&gt;</code><br/></p>
</blockquote>
<p>This process has some drawbacks as packages are sometimes included
that are no longer needed and should only be used initially and then
maintained manually.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_python.html'>python</a>, <a href='tag_pip.html'>pip</a>, <a href='tag_requirements.html'>requirements</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/creating-a-python-requirementstxt-file.html</link>
<guid>http://www.szumowski.org/./creating-a-python-requirementstxt-file.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 02 Jul 2023 11:51:53 -0400</pubDate></item>
<item><title>
Python: Initializing a New Project using venv
</title><description><![CDATA[
<p>Start out by creating a new directory or cloning a repository (which
creates a directory) and <em>cd</em> into it:</p>
<blockquote>
<p><code>$ git clone https://gitlab.com/username/proj-name</code><br/>
<code>$ cd proj-name/</code><br/></p>
</blockquote>
<p>Initialize the virtual environment:</p>
<blockquote>
<p><code>$ python3 -m venv venv</code><br/>
<code>$ source venv/bin/activate</code><br/></p>
</blockquote>
<p>Install whatever dependencies you need:</p>
<blockquote>
<p><code>$ pip install package1 package2</code><br/></p>
</blockquote>
<p>Then develop and/or run your program:</p>
<blockquote>
<p><code>$ python data_model.py</code><br/>
<code>$ python app.py</code><br/>
<code>$ sqlite3 hpr.sqlite "select count(*) from users"</code><br/></p>
</blockquote>
<p>When you’re done working you can <em>deactivate</em> the environment
by typing:</p>
<blockquote>
<p><code>$ deactivate</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_python.html'>python</a>, <a href='tag_venv.html'>venv</a>, <a href='tag_virtual.html'>virtual</a>, <a href='tag_environment.html'>environment</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/python-initializing-a-new-project-using-venv.html</link>
<guid>http://www.szumowski.org/./python-initializing-a-new-project-using-venv.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 01 Jul 2023 20:07:47 -0400</pubDate></item>
<item><title>
Printing Numbers using Thousand Separators
</title><description><![CDATA[
<p>You can use a pipe to <code>awk</code> to output numbers with
thousands separators (commas). For Example, here’s how you can total the
5th column of the <code>ls -l</code> command and print it with thousands
separators:</p>
<blockquote>
<p><code>$ ls -l | awk '{total = total + $5}END{print total}' | LC_ALL=en_US.UTF-8 awk '{printf("%'"'"'d\n", $0) }'</code><br/>
<code>21,387</code><br/></p>
</blockquote>
<p>This can be adapted to other commands as necessary.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_bash.html'>bash</a>, <a href='tag_awk.html'>awk</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/printing-numbers-using-thousand-separators.html</link>
<guid>http://www.szumowski.org/./printing-numbers-using-thousand-separators.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 30 Jun 2023 19:05:13 -0400</pubDate></item>
<item><title>
GCC can’t find stdio.h in Alpine Linux
</title><description><![CDATA[
<p>A while ago, I installed the <a
href="https://github.com/ish-app/ish">iSH</a> app on my iPad which made
it possible for me to develop Python and C code as well as use it as an
SSH client. However, I ran into an issue when trying to compile C code
because the compiler couldn’t resolve <code>stdio.h</code>. The
following excerpt from <a
href="http://stackoverflow.com/questions/42366739/ddg#42366740">StackOverflow</a>
resolves the issue:</p>
<p>Install <code>libc-dev</code> in addition to <code>GCC</code>, or
just install <code>build-base</code> for everything
(<code>alpine-sdk</code> is probably an overkill). To install run the
following command:</p>
<blockquote>
<p><code># apk add libc-dev</code><br/></p>
</blockquote>
<p>You need to install it separately because in Alpine Linux, the
package GCC doesn’t depend on <code>libc-dev</code> for good reason: You
can use <code>gcc</code> to compile things without <code>libc</code>,
for example hypervisors firmware etc.</p>
<p>Tags: <a href='tag_gcc.html'>gcc</a>, <a href='tag_alpine-linux.html'>alpine-linux</a>, <a href='tag_ipad.html'>ipad</a>, <a href='tag_ish.html'>ish</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/gcc-cant-find-stdioh-in-alpine-linux.html</link>
<guid>http://www.szumowski.org/./gcc-cant-find-stdioh-in-alpine-linux.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 29 Jun 2023 18:01:37 -0400</pubDate></item>
<item><title>
Ubuntu: Disable cloud-init on Startup
</title><description><![CDATA[
<p>In systems that use <code>systemd</code> and have a current (17.0+)
version of <code>cloud-init</code>, upstream documentation describes the
process for disabling <code>cloud-init</code> with either of the
following:</p>
<blockquote>
<p><code>* touch /etc/cloud/cloud-init.disabled</code><br/></p>
</blockquote>
<p>or,</p>
<blockquote>
<p><code>* add cloud-init=disabled to the kernel command line.</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ubuntu.html'>ubuntu</a>, <a href='tag_cloud-init.html'>cloud-init</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/ubuntu-disable-cloud-init-on-startup9393.html</link>
<guid>http://www.szumowski.org/./ubuntu-disable-cloud-init-on-startup9393.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 28 Jun 2023 20:03:08 -0400</pubDate></item>
<item><title>
Red Hat Subscripion Manager - Registering
</title><description><![CDATA[
<p>Registering your RHEL instance with Red Hat is straightforward
assuming that you already have an account:</p>
<blockquote>
<p><code># subscription-manager register --username &lt;your-rh-user&gt; --password &lt;password&gt;</code><br/></p>
</blockquote>
<p>List the available repos or just go with a default:</p>
<blockquote>
<p><code># subscription-manager list --available</code><br/>
<code># subscription-manager attach --auto</code><br/></p>
</blockquote>
<p>Then you can do your update:</p>
<blockquote>
<p><code># yum update</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/red-hat-subscripion-manager---registering.html</link>
<guid>http://www.szumowski.org/./red-hat-subscripion-manager---registering.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 27 Jun 2023 18:01:40 -0400</pubDate></item>
<item><title>
RHEL QCOW Image Password
</title><description><![CDATA[
<p>Did you know that although you can install RHEL from an
<code>ISO</code>, you can also download a <code>QCOW2</code> image from
Red Hat. However, when you try to start it up under
<code>virt-manager</code> you’ll see that it boots to a
<code>root</code> prompt and you don’t know what the password is. This
can be fixed by running the following from the host’s terminal:</p>
<blockquote>
<p><code># virt-customize -a &lt;qcow2-image-file-name&gt; --root-password password:&lt;password&gt;</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_qcow.html'>qcow</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/rhel-qcow-image-password23397.html</link>
<guid>http://www.szumowski.org/./rhel-qcow-image-password23397.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 26 Jun 2023 19:07:09 -0400</pubDate></item>
<item><title>
Find System Hogs and Child Processes
</title><description><![CDATA[
<p>There are a lot of tools out there that can help you to do this that
are both GUI or command line-based but sometimes you’re on a production
server that may have limited tools and sometimes the simplest tools are
best in cases like this.</p>
<p>List the processes that are not owned by you that are using a lot of
CPU:</p>
<blockquote>
<p><code>$ ps aux --sort=-%cpu | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>or by memory:</p>
<blockquote>
<p><code>$ ps aux --sort=-%mem | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>or by longest running process:</p>
<blockquote>
<p><code>$ ps aux --sort=-time | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>List processes by a specific user:</p>
<blockquote>
<p><code>$ ps -U gszumo</code><br/></p>
</blockquote>
<p>or multiple users:</p>
<blockquote>
<p><code>$ ps -U gszumo -U katy</code><br/></p>
</blockquote>
<p>You can see child proceses:</p>
<blockquote>
<p><code>$ ps -eo pid,args --forest</code><br/></p>
</blockquote>
<p>or children of a specific process:</p>
<blockquote>
<p><code>$ ps -f --ppid 4775</code><br/></p>
</blockquote>
<p>I don’t remember where I found these tips but they have come in handy
on many occasions and I am documenting them here hoping that readers
(whatever few there are) will also benefit from them.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ps.html'>ps</a>, <a href='tag_processes.html'>processes</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/find-system-hogs-and-child-processes30247.html</link>
<guid>http://www.szumowski.org/./find-system-hogs-and-child-processes30247.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 25 Jun 2023 11:20:06 -0400</pubDate></item>
</channel></rss>
