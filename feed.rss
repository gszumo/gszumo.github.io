<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Wed, 24 May 2023 21:05:54 -0400</lastBuildDate>
<pubDate>Wed, 24 May 2023 21:05:54 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Bash Environment Variables
</title><description><![CDATA[

<p>Here are some bash environment variables that are useful to know when you're using the command prompt:</p>

<p><code> $0</code> - name of shell or shell script <br/>
<code> $1, $2, $3, ...</code> - positional parameters to script <br/>
<code> $#</code> - count of positional parameters <br/>
<code> $?</code> - exit status of most recent foreground task <br/>
<code> $-</code> - current options that are set for the shell <br/>
<code> $$</code> - PID of the current shell (not subshell) <br/>
<code> $!</code> - the PID of the most recent background command <br/>
<code> $DESKTOP_SESSION</code> - path to the current display manager <br/>
<code> $EDITOR</code> - preferred text editor <br/>
<code> $LANG</code> - current language <br/>
<code> $PATH</code> - directory list to search for executables (programs) <br/>
<code> $PWD</code> - current working directory <br/>
<code> $SHELL</code> - current shell <br/>
<code> $USER</code> - current username <br/>
<code> $HOME</code> - current user's home directory <br/>
<code> $HOSTNAME</code> - current name of the host <br/>
<code> $TERM</code> - current terminal <br/></p>

<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_bash.html'>bash</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/bash-environment-variables11985.html</link>
<guid>http://www.szumowski.org/./bash-environment-variables11985.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 24 May 2023 20:59:35 -0400</pubDate></item>
<item><title>
Bash CLI Keyboard Shortcuts
</title><description><![CDATA[

<p>Here are some quick keyboard shortcuts you can use at the command prompt:</p>

<p><br/><code>ctrl-l</code> -- clear screen
<br/><code>ctrl-r</code> -- does a search in the previously given commands so that you don't have to repeat long command.
<br/><code>ctrl-u</code> -- clears the typing before the hotkey.
<br/><code>ctrl-a</code> -- takes you to the begining of the command you are currently typing.
<br/><code>ctrl-e</code> -- takes you to the end of the command you are currently typing in.
<br/><code>esc-b</code> -- takes you back by one word while typing a command.
<br/><code>ctrl-c</code> -- kills the current command or process.
<br/><code>ctrl-d</code> -- kills the shell.
<br/><code>ctrl-h</code> -- deletes one letter at a time from the command you are typing in.
<br/><code>ctrl-z</code> -- puts the currently running process in background, the process can be brought back to run state by using fg command.
<br/><code>esc-p</code> -- like ctrl-r lets you search through the previously given commands.
<br/><code>esc-.</code> -- gives the last command you typed.</p>

<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/bash-cli-keyboard-shortcuts21656.html</link>
<guid>http://www.szumowski.org/./bash-cli-keyboard-shortcuts21656.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 23 May 2023 18:07:26 -0400</pubDate></item>
<item><title>
How To Find All of the Shell Scripts In a Directory
</title><description><![CDATA[

<p>This is a quick and dirty way which will list all of the files that are shell scripts:</p>

<p><code> for i in * </code><br/>
<code> do </code><br/>
<code>     type=$(file ${i}|awk -F, '{print $2}')</code><br/>
<code>     if [[ "${type}" = " ASCII text executable" ]]; then </code><br/>
<code>         echo "${i} is a shell script"</code><br/>
<code>     fi</code><br/>
<code> done</code><br/>
<br/></p>

<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_motd.html'>motd</a>, <a href='tag_awk.html'>awk</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-find-all-of-the-shell-scripts-in-a-directory.html</link>
<guid>http://www.szumowski.org/./how-to-find-all-of-the-shell-scripts-in-a-directory.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 21 May 2023 20:20:15 -0400</pubDate></item>
<item><title>
Diff 2 Folders Over SSH
</title><description><![CDATA[

<p>If you need to do a 'diff' on 2 folders and one of them is remote then you can accomplish that as follows:</p>

<p><code>
$ diff &lt;(ssh username@192.168.1.60 ls -R /home/username/dir1) &lt;(ls -R /home/username/dir2)
</code></p>

<p>Tags: <a href='tag_ssh.html'>ssh</a>, <a href='tag_diff.html'>diff</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/diff-2-folders-over-ssh28479.html</link>
<guid>http://www.szumowski.org/./diff-2-folders-over-ssh28479.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 19 May 2023 18:36:28 -0400</pubDate></item>
<item><title>
How to Enable the Administrator Account in Windows
</title><description><![CDATA[

<p>To activate the Administrator account on Windows, open the Command Prompt as Administrator from the Start Menu, or you can right-click on the "Start" menu and select the "Powershell" menu item, then enter:</p>

<p><code>
net user administrator /active: yes
</code></p>

<p>into the window. You should disable the account again when you're done.</p>

<p>Tags: <a href='tag_windows.html'>windows</a>, <a href='tag_sysadmin.html'>sysadmin</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-enable-the-administrator-account-in-windows19625.html</link>
<guid>http://www.szumowski.org/./how-to-enable-the-administrator-account-in-windows19625.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 18 May 2023 16:08:36 -0400</pubDate></item>
<item><title>
Convert HTML Files to EPUB Using Pandoc
</title><description><![CDATA[

<p>If you want to convert one or more HTML files to EPUB quickly using the command line you can try <a href="http://johnmacfarlane.net/pandoc/">pandoc</a>.</p>

<p><code>
pandoc -f html -t epub3 -o output.epub input.html
</code></p>

<p>You can add metadata for epub:</p>

<p><code>
pandoc -f html -t epub3 --epub-metadata=metadata.xml -o output.epub input.html
</code></p>

<p>You can find other resources here:</p>

<p><a href="https://linuxconfig.org/how-to-convert-various-ebook-formats-for-amazon-kindle-on-linux">How to convert various eBook formats for Amazon Kindle on Linux</a></p>

<p>Tags: <a href='tag_epub.html'>epub</a>, <a href='tag_pandoc.html'>pandoc</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/convert-html-files-to-epub-using-pandoc8802.html</link>
<guid>http://www.szumowski.org/./convert-html-files-to-epub-using-pandoc8802.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 17 May 2023 22:11:18 -0400</pubDate></item>
<item><title>
Mastodon Automated Postings using the API
</title><description><![CDATA[

<p>You can post to Mastodon using their API using <code>cURL</code>.</p>

<h4>Create or Find Your Access Token</h4>

<p>Once you have a Mastodon account, you need your account's access token. The steps you need to get that:</p>

<ol>
<li>Sign into your Mastodon account</li>
<li>Click on In the <code>"Preferences"</code> link.</li>
<li>On the bottom left corner of that page, click the <code>"Development"</code> link.</li>
<li>On the <code>"Your Applications"</code> page, click the blue <code>NEW APPLICATION</code> button.</li>
<li>Give your application a name, and decide what kind of access you want to have when you connect to your account via the Mastodon API (i<code>read</code>, <code>write</code>, and <code>follow</code> are the defaults). You can always change this later.</li>
<li>At the bottom of the page, click the blue <code>SUBMIT</code> button.</li>
<li>You will be directed back to the <code>Your applications</code> page, but now you should see your application name. Click that.</li>
<li>In your application's page, there are three tokens. For this tutorial, you need the <code>Your access token</code> one.
    Note: if your access token is ever compromised, you can click regenerate, and your old access token will stop working, and you'll be shown a new one.</li>
</ol>

<h4>Post a Status Update using cURL</h4>

<p><br/>
<code> 
$ curl https://mastodon.sdf.org/api/v1/statuses -H 'Authorization: Bearer put-your-api-token-here' -F 'status=Hello, World'
</code> <br/> <br/></p>

<p>Tags: <a href='tag_curl.html'>curl</a>, <a href='tag_mastodon.html'>mastodon</a>, <a href='tag_api.html'>api</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/mastodon-automated-postings-using-the-api10012.html</link>
<guid>http://www.szumowski.org/./mastodon-automated-postings-using-the-api10012.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 16 May 2023 22:07:09 -0400</pubDate></item>
<item><title>
Creating Passwordless SSH Keys
</title><description><![CDATA[

<p><br/>Create the key. Note those are two single quotes after the -N (for a blank passwd)
<br/>
<code> $ ssh-keygen -t rsa -b 4096 -N '' </code> <br/>
<br/>Copy it to the target server
<br/> <code> $ cat .ssh/id<em>rsa.pub | ssh username@192.168.1.123  'cat >> .ssh/authorized</em>keys' </code> <br/>
<br/>
Test it
<br/>
<code> 
$ ssh username@192.168.1.123
</code> <br/>
<br/></p>

<p>Tags: <a href='tag_ssh.html'>ssh</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/creating-passwordless-ssh-keys6962.html</link>
<guid>http://www.szumowski.org/./creating-passwordless-ssh-keys6962.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 14 May 2023 22:14:46 -0400</pubDate></item>
<item><title>
SSH Directory Permissions Settings
</title><description><![CDATA[

<p>It is important to set the directory and file permissions for your ~/.ssh correctly. </p>

<p>Typically you want the permissions to be:</p>

<ul>
<li>.ssh directory: 700 (drwx------)</li>
<li>public key (.pub file): 644 (-rw-r--r--)</li>
<li>private key (id_rsa): 600 (-rw-------)</li>
<li>lastly your home directory should not be writeable by the group or others (at most 755 (drwxr-xr-x)).</li>
</ul>

<p><br/>For example, to set this permissions do:
<br/>
<code> $ chmod 700 ~/.ssh </code> <br/>
<code> $ chmod 600 ~/.ssh/* </code> <br/>
<code> $ chmod 644 ~/.ssh/*.pub </code> <br/>
<code> $ ls -ltr ~/.ssh/</code><br/></p>

<p>Tags: <a href='tag_ssh.html'>ssh</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/ssh-directory-permissions-settings10237.html</link>
<guid>http://www.szumowski.org/./ssh-directory-permissions-settings10237.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 13 May 2023 16:53:49 -0400</pubDate></item>
<item><title>
How To Use Github Tokens on the Command Line
</title><description><![CDATA[

<p>GitHub’s access policy requires you to use tokens instead of username/password to update your repositories. </p>

<p>To adapt your existing local / cloned repos to token based auth:
<br/><code>$ git remote remove origin</code>
<br/><code>$ git remote add origin https://[TOKEN]@github.com/[USER]/[REPO]</code>
<br/><code>$ git push</code>
<br/><br/>
Clone repos using token based authentication (non public repos)</code>
<br/><code>$ git clone https://[username]:[token]@github.com/[accountname]/[reponame]</code>
<br/></p>

<p>Tags: <a href='tag_github.html'>github</a>, <a href='tag_tokens.html'>tokens</a>, <a href='tag_motd.html'>motd</a>, <a href='tag_cli.html'>cli</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-use-github-tokens-on-the-command-line1357.html</link>
<guid>http://www.szumowski.org/./how-to-use-github-tokens-on-the-command-line1357.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 12 May 2023 21:20:39 -0400</pubDate></item>
</channel></rss>
