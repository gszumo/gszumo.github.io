<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Wed, 02 Aug 2023 17:14:41 -0400</lastBuildDate>
<pubDate>Wed, 02 Aug 2023 17:14:41 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
How To Get Information on Linux
</title><description><![CDATA[
<p>The <em>manpages</em> are historically <strong>the place to
go</strong> for any information about the software and utilities
installed on a Linux machine. I believe that the <em>info</em> page
seems to be the best place for <em>newbies</em> to go because it is so
much easier to navigate, and, like <em>manpages</em>, it is a still a
great place to get information about your system.</p>
<p>Suppose you want to get information about <em>socket</em>. You would
type:</p>
<blockquote>
<p><code>$ info socket</code><br/></p>
</blockquote>
<p>and you’d get a page that looks similar to a <em>manpage</em> but it
can be navigated by using keyboard shortcuts:</p>
<blockquote>
<p><code></code>q<code>- exits back to the shell</code><br/>
<code></code>u<code>- moves up one level</code><br/>
<code></code>n<code>- moves to the next node on the current level</code><br/>
<code></code>p<code>- moves to the previous node on the current level</code><br/>
<code></code>space<code>- goes to the selected node under the cursor</code><br/>
<code></code>H<code>- lists all of the Info commands</code><br/></p>
</blockquote>
<p>The commands <em>whatis</em> and <em>whereis</em> are also very
useful in finding information on the system.</p>
<blockquote>
<p><code>$ whatis printf</code><br/>
<code>printf (3)           - formatted output conversion</code><br/>
<code>printf (1)           - format and print data</code><br/></p>
</blockquote>
<p>The <em>whatis</em> command will list the set of manpages for a
specific keyword. The keyword <em>printf</em> is used in the
<em>bash</em> shell as well as the <em>c</em> programming language. Here
you see separate pages for each usage. To view them you would specify
the section number in your command to <em>man</em>, i.e.,
<code>$ man 3 printf</code> or <code>man printf</code> (which defaults
to section 1). This is the same output as entering
<code>$ man -f printf</code>.</p>
<p>The <em>whereis</em> command will list which system files reference a
specified keyword or command. For example,</p>
<blockquote>
<p><code>$ whereis socket</code><br/>
<code>socket: /usr/man/man7/socket.7.gz /usr/man/mann/socket.n.gz /usr/man/man2/socket.2.gz</code><br/>
<code>$ whereis printf</code><br/>
<code>printf: /usr/bin/printf /bin/printf /usr/man/man3/printf.3.gz /usr/man/man1/printf.1.gz</code><br/></p>
</blockquote>
<p>In case you aren’t really sure of what you’re looking for you can use
a ‘keyword’ search to the <em>man</em> or <em>apropos</em> commands
which will use the <em>keyword</em> you enter as a <em>regex</em>
(regular expression) to find all of the matches throughout the
manpages:</p>
<blockquote>
<p><code>$ man -k printf</code><br/>
<code>aa_printf (3)        - print text to AA-lib output buffers.</code><br/>
<code>asprintf (3)         - print to allocated string</code><br/>
<code>ber_printf (3)       - OpenLDAP LBER simplified Basic Encoding Rules library routines f...</code><br/>
<code>BIO_printf (3)       - formatted output to a BIO</code><br/>
<code>BIO_snprintf (3)     - formatted output to a BIO</code><br/>
<code>BIO_vprintf (3)      - formatted output to a BIO</code><br/>
<code>BIO_vsnprintf (3)    - formatted output to a BIO</code><br/>
<code>buffer_printf.c (3)  - Buffer management functions.</code><br/>
<code>curl_mprintf (3)     - formatted output conversion</code><br/>
<code>dprintf (3)          - formatted output conversion</code><br/>
<code>format (n)           - Format a string in the style of sprintf</code><br/>
<code>fprintf (3)          - formatted output conversion</code><br/>
<code>etc...</code><br/></p>
</blockquote>
<p>In case you are interested, the <em>manpages</em> are broken down
into different sections as listed here:</p>
<blockquote>
<p><code>1  General Commands</code><br/>
<code>2  System Calls and Error Numbers</code><br/>
<code>3  C Libraries</code><br/> <code>3p perl</code><br/>
<code>4  Devices and device drivers</code><br/>
<code>5  File Formats and config files</code><br/>
<code>6  Game instructions</code><br/>
<code>7  Miscellaneous information</code><br/>
<code>8  System maintenance</code><br/>
<code>9  Kernel internals</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_man.html'>man</a>, <a href='tag_apropos.html'>apropos</a>, <a href='tag_whereis.html'>whereis</a>, <a href='tag_whatis.html'>whatis</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-get-information-on-linux25688.html</link>
<guid>http://www.szumowski.org/./how-to-get-information-on-linux25688.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 02 Aug 2023 17:12:52 -0400</pubDate></item>
<item><title>
Locking Down SSH User Access
</title><description><![CDATA[
<p>To secure your system, you shouldn’t allow root to login remotely.
Instead, if an admin needs to use the <em>root</em> account they should
login using their own account and then <code>su -</code> or
<code>sudo</code> to the <em>root</em> account as needed.</p>
<p>Edit the <code>/etc/ssh/sshd_config</code> file and change the
following lines:</p>
<blockquote>
<p><code>PermitRootLogin no</code><br/>
<code>PermitEmptyPasswords no</code><br/></p>
</blockquote>
<p>Some of these properties may be commented out in the file, so all
you’d need to do is remove the <em>#</em> sign.</p>
<p>Once these changes are made you should then restart ssh. On my system
this is done by:</p>
<blockquote>
<p><code># /etc/rc.d/rc.sshd restart</code><br/></p>
</blockquote>
<p>After the restart your changes will be in affect. However, root can
still login “from the local terminal”.</p>
<p>You can go a step further and restrict only specific users access to
login via ssh. For example, if you wanted only <em>user1</em> and
<em>user2</em> the ability to login with ssh you can add a line to the
above file:</p>
<blockquote>
<p><code>AllowUsers user1 user2</code><br/></p>
</blockquote>
<p>Everyone except these two users will be denied access via ssh.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ssh.html'>ssh</a>, <a href='tag_ssh-config.html'>ssh-config</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/locking-down-ssh-user-access947.html</link>
<guid>http://www.szumowski.org/./locking-down-ssh-user-access947.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 01 Aug 2023 17:56:03 -0400</pubDate></item>
<item><title>
Make a File Immutable
</title><description><![CDATA[
<p>You can use the <em>chattr</em> command (as <em>root</em>) to make a
file “unalterable” so that even the root user cannot modify or delete it
without using the <em>chattr</em> command to revert the change. This is
done by using <em>chattr</em>’s <code>+i</code> and <code>-i</code>
flags.</p>
<p><em>chattr</em> changes a file’s attributes on a Linux file
system.</p>
<p>Set the flag as root:</p>
<blockquote>
<p><code># chattr +i xrdp-notes.txt</code><br/>
<code># lsattr xrdp-notes.txt</code><br/>
<code>----i---------e------- xrdp-notes.txt</code><br/></p>
</blockquote>
<p>A normal user can’t delete it:</p>
<blockquote>
<p><code>$ rm xrdp-notes.txt</code><br/>
<code>rm: cannot remove 'xrdp-notes.txt': Operation not permitted</code><br/></p>
</blockquote>
<p>Even root cannot delete it without changing the file attribute
back:</p>
<blockquote>
<p><code># rm xrdp-notes.txt</code><br/>
<code>rm: cannot remove 'xrdp-notes.txt': Operation not permitted</code><br/></p>
</blockquote>
<p>Once the flag is unset it can be deleted:</p>
<blockquote>
<p><code># chattr -i xrdp-notes.txt</code><br/>
<code># lsattr xrdp-notes.txt</code><br/>
<code>--------------e------- xrdp-notes.txt</code><br/>
<code># exit</code><br/> <code>$ rm xrdp-notes.txt</code><br/>
<code>$</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_chattr.html'>chattr</a>, <a href='tag_lsattr.html'>lsattr</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/make-a-file-immutable19051.html</link>
<guid>http://www.szumowski.org/./make-a-file-immutable19051.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 31 Jul 2023 20:54:48 -0400</pubDate></item>
<item><title>
Set Mac Hostname
</title><description><![CDATA[
<p>To set the host name of your Mac (in my case macbook-pro) in the
command prompt, type the following command:</p>
<blockquote>
<p><code>$ sudo scutil --set HostName "macbook-pro"</code><br/>
<code>$ sudo scutil --set LocalHostName "macbook-pro"</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_macOS.html'>macOS</a>, <a href='tag_cli.html'>cli</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/set-mac-hostname15613.html</link>
<guid>http://www.szumowski.org/./set-mac-hostname15613.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 30 Jul 2023 15:45:42 -0400</pubDate></item>
<item><title>
Reset Mac Launchpad
</title><description><![CDATA[
<p>To reset the Mac LaunchPad to default enter the following:</p>
<blockquote>
<p><code>rm ~/Library/Application\ Support/Dock/*.db ; killall Dock</code><br/></p>
</blockquote>
<p>This will however put all of the Apple apps on the first page and all
of your remaining apps will be sorted alphabetically on the remaining
pages.</p>
<p>Tags: <a href='tag_macOS.html'>macOS</a>, <a href='tag_launchpad.html'>launchpad</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/reset-mac-launchpad.html</link>
<guid>http://www.szumowski.org/./reset-mac-launchpad.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 29 Jul 2023 20:53:43 -0400</pubDate></item>
<item><title>
Creating a Docker Registry
</title><description><![CDATA[
<p>Creating a docker registry is rather straightforward, but you may
need to do some <em>tweaking</em> of your docker installation in order
to get it working as indicated below.</p>
<p>Let’s assume that you already have docker up and running on your
machine.</p>
<p>We are going to set up a Docker registry on our local server. This
server will not have a secure connection and will only be used
internally, so we will need to allow this access by creating a file in
<code>/etc/docker</code> called <em>daemon.json</em> to designate
this:</p>
<blockquote>
<p><code>{</code><br/> <code>"insecure-registries":[</code><br/>
<code>"localhost:5000"</code><br/> <code>]</code><br/>
<code>}</code><br/></p>
</blockquote>
<p>Don’t forget to restart the docker daemon after making this
change.</p>
<p>Now, create a docker volume that will persist your registry data when
it goes offline:</p>
<blockquote>
<p><code># docker volume create /mnt/registry</code><br/></p>
</blockquote>
<p>This next part is optional. You can use whatever means you want to
download and start the container: Create a script to download the image
and start the container:</p>
<blockquote>
<p><code># mkdir /mnt/registry</code><br/>
<code># cat &gt;start-registry.sh &lt;&lt;"EOF"</code><br/>
<code>&gt; docker run -d \</code><br/>
<code>&gt;   -p 5000:5000 \</code><br/>
<code>&gt;   --restart=always \</code><br/>
<code>&gt;   --name registry \</code><br/>
<code>&gt;   -v /mnt/registry:/var/lib/registry \</code><br/>
<code>&gt;   registry:2</code><br/> <code>&gt; EOF</code><br/></p>
</blockquote>
<p>Now start the registry (using the above script):</p>
<blockquote>
<p><code># ./start-registry.sh</code><br/></p>
</blockquote>
<p>Now, let’s test it by pushing a sample <em>hello-world</em> image to
the registry:</p>
<blockquote>
<p><code>$ docker tag hello-world:latest localhost:5000/hello-world:latest</code><br/>
<code>$ docker push localhost:5000/hello-world:latest</code><br/>
<code>The push refers to repository [localhost:5000/hello-world]</code><br/>
<code>e07ee1baac5f: Pushed</code><br/>
<code>latest: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: 525</code><br/></p>
</blockquote>
<p>NOTE: If you are pushing to this registry from another server you
need to add the following to <code>/etc/docker/daemon.json</code> and
restart <em>docker</em> before you will be able to do a <em>push</em>
(replace <em>localhost</em> with the IP address of the server that’s
running the registry):</p>
<blockquote>
<p><code>{</code><br/> <code>"insecure-registries":[</code><br/>
<code>"localhost:5000"</code><br/> <code>]</code><br/>
<code>}</code><br/></p>
</blockquote>
<p>Now we can use <em>curl</em> to list the repositories in the
registry:</p>
<blockquote>
<p><code>curl localhost:5000/v2/_catalog</code><br/></p>
</blockquote>
<p>More information about creating a <em>docker registry</em> can be
found <a
href="https://www.tutorialspoint.com/docker/docker_private_registries.htm">here</a>
and if you’re interested in setting up authentication for your private
registry you can find more information <a
href="https://www.baeldung.com/ops/docker-private-registry">here</a></p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_docker.html'>docker</a>, <a href='tag_registry.html'>registry</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/creating-a-docker-registry8450.html</link>
<guid>http://www.szumowski.org/./creating-a-docker-registry8450.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 28 Jul 2023 19:48:04 -0400</pubDate></item>
<item><title>
Using rsync to Sync Two Directories
</title><description><![CDATA[
<p>You can sync two directories using <em>rsync</em> tool. The following
command:</p>
<blockquote>
<p><code>$ rsync -a -v --delete sending_directory target_directory;</code><br/></p>
</blockquote>
<p>will copy <em>sending_directory</em> to <em>target_directory</em>
creating a directory structure of
<em>sending_directory/target_directory</em>. The <code>--delete</code>
flag will ensure that any files that were previously in
<em>sending_directory/target_directory</em> that are not in
<em>sending_directory</em> will be deleted so that the contents of the
two directories are the same.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rsync.html'>rsync</a>, <a href='tag_backups.html'>backups</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/using-rsync-to-sync-two-directories17585.html</link>
<guid>http://www.szumowski.org/./using-rsync-to-sync-two-directories17585.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 27 Jul 2023 17:09:20 -0400</pubDate></item>
<item><title>
Move Files Older Than So Many Days with Find
</title><description><![CDATA[
<p>You may want to clean up a directory that has files older than a
certain number of days, for example, 30 days. You can do this with the
<em>find</em> command:</p>
<p>To move files older than 30 days in current folder to the
<em>old</em> folder:</p>
<blockquote>
<p><code>$ find . -mtime +30 -exec mv {} old/ \;</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_find.html'>find</a>, <a href='tag_mtime.html'>mtime</a>, <a href='tag_mv.html'>mv</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/move-files-older-than-so-many-days-with-find.html</link>
<guid>http://www.szumowski.org/./move-files-older-than-so-many-days-with-find.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 26 Jul 2023 17:08:26 -0400</pubDate></item>
<item><title>
Build, Tag, and Push a Docker Image with One Command
</title><description><![CDATA[
<p>You can build, tag, and push a docker image to a remote all in one
command with the –quiet parameter on docker build, which only outputs
the SHA256 hash (annoyingly prefixed with SHA256:, but nothing a little
cutting can’t fix).</p>
<blockquote>
<p><code>$ docker tag $(docker build . -q | cut -c 8-999) myregid/imagename:1.0.1 &amp;&amp; docker push myregid/imagename</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_docker.html'>docker</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/build-tag-and-push-a-docker-image-with-one-command.html</link>
<guid>http://www.szumowski.org/./build-tag-and-push-a-docker-image-with-one-command.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 25 Jul 2023 17:32:36 -0400</pubDate></item>
<item><title>
Vim Tips: Searching a File for Multiple Strings
</title><description><![CDATA[
<p>In Vim you can perform a search like this: /string1/;/string2</p>
<p>This will will combine two searches. It tells Vim:</p>
<ol type="1">
<li>Search for string1, then</li>
<li>From there search for string2 on any line that also contains
string1.</li>
</ol>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_search.html'>search</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-tips-searching-a-file-for-multiple-strings.html</link>
<guid>http://www.szumowski.org/./vim-tips-searching-a-file-for-multiple-strings.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 24 Jul 2023 20:35:18 -0400</pubDate></item>
</channel></rss>
