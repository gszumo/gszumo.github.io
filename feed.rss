<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Fri, 08 Sep 2023 21:06:18 -0400</lastBuildDate>
<pubDate>Fri, 08 Sep 2023 21:06:18 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Compiling 32-bit C/C++ Programs on 64-bit
</title><description><![CDATA[
<p>By default, <em>gcc</em> will compile your c/c++ program to 64-bit
instructions. In order to compile to 32-bit you need to add a
<code>-m32</code> flag to the command line. For example, to compile a
file called <em>hello-world.c</em> using a Linux terminal, you would do
something like this:</p>
<blockquote>
<p><code>$ gcc -m32 hello-world.c -o hello-world</code><br/></p>
</blockquote>
<p>If you get the following error:</p>
<blockquote>
<p><code>fatal error: bits/predefs.h: No such file or directory</code><br/></p>
</blockquote>
<p>it means that the <em>multilib</em> standard library is missing.
Therefore, you must install <em>gcc-multlib</em>. The name is different
based upon the distribution and the compiler. For Debian/Ubuntu-based
distros it would be:</p>
<blockquote>
<p><code>$ sudo apt-get install gcc-multilib # For C</code><br/>
<code>$ sudo apt-get install g++-multilib # For C++</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_programming.html'>programming</a>, <a href='tag_c.html'>c</a>, <a href='tag_cpp.html'>cpp</a>, <a href='tag_multilib.html'>multilib</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/compiling-32-bit-cc-programs-on-64-bit.html</link>
<guid>http://www.szumowski.org/./compiling-32-bit-cc-programs-on-64-bit.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 08 Sep 2023 21:06:10 -0400</pubDate></item>
<item><title>
How to Clean Up the Fedora Root Folder
</title><description><![CDATA[
<p>OK, so you’re running <em>Fedora</em> and you’re getting warnings
that you’re running out of disk space on the <em>root</em> folder. What
are your options?</p>
<p>The first thing to consider is <em>resizing</em> the root partition
size. For that you can find instructions <a
href="https://gist.github.com/181192/cf7eb42a25538ccdb8d0bb7dd57cf236">here</a></p>
<p>If that is not an option, then the next thing you probably should do
is find out which folders/directories are causing the issue. You can use
the <code>du</code> command and some piping to figure this out:</p>
<p><strong>Search the largest folders</strong></p>
<blockquote>
<p><code>$ sudo du --exclude="/home" -x -h -a / | sort -r -h | head -30</code><br/></p>
</blockquote>
<p><strong>Common cleanable folders</strong></p>
<p>Sometimes the issue is found in the docker cache:</p>
<blockquote>
<p><code>$ docker system prune -a</code><br/></p>
</blockquote>
<p>or previous kernel versions:</p>
<blockquote>
<p><code>$ sudo dnf remove $(dnf repoquery --installonly --latest-limit=-2 -q)</code><br/></p>
</blockquote>
<p><strong>Journal logs</strong></p>
<blockquote>
<p><code>$ sudo journalctl --vacuum-size=100M</code><br/></p>
</blockquote>
<p><strong>Caches</strong></p>
<p>The dnf package cache can be cleaned up too:</p>
<blockquote>
<p><code>$ sudo dnf clean packages</code><br/></p>
</blockquote>
<p>You can also try cleaning up the Fedora version cache:</p>
<blockquote>
<p><code>$ sudo dnf system-upgrade clean</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_fedora.html'>fedora</a>, <a href='tag_disk-space.html'>disk-space</a>, <a href='tag_clean.html'>clean</a>, <a href='tag_resize.html'>resize</a>, <a href='tag_sysadmin.html'>sysadmin</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-clean-up-the-fedora-root-folder.html</link>
<guid>http://www.szumowski.org/./how-to-clean-up-the-fedora-root-folder.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 06 Sep 2023 17:05:55 -0400</pubDate></item>
<item><title>
Install Spotify using Flatpak using Command Line
</title><description><![CDATA[
<p>If <em>Flatpak</em> is not installed, then install it:</p>
<blockquote>
<p><code>$ sudo dnf install -y flatpak   # Fedora</code><br/>
<code>$ sudo apt install flatpak      # Ubuntu-based</code><br/>
<code>$ sudo zypper install flatpak   # SUSE</code><br/>
<code>$ sudo pacman -S flatpak        # Arch-based</code><br/></p>
</blockquote>
<p>Since <em>flathub.org</em> is the most popular flatpak repository we
will use the command line to enable it:</p>
<blockquote>
<p><code>$ flatpak remote-add --if-not-exists flathub \</code><br/>
<code>https://flathub.org/repo/flathub.flatpakrepo</code><br/></p>
</blockquote>
<p>Go to the <a
href="https://flathub.org/apps/details/com.spotify.Client">Spotify page
on Flathub</a> and choose “Install”, or run the installation from the
command line:</p>
<blockquote>
<p><code>$ sudo flatpak install flathub com.spotify.Client</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_flatpak.html'>flatpak</a>, <a href='tag_spotify.html'>spotify</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-spotify-using-flatpak-using-command-line.html</link>
<guid>http://www.szumowski.org/./install-spotify-using-flatpak-using-command-line.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 05 Sep 2023 16:33:17 -0400</pubDate></item>
<item><title>
How to reveal dot files in finder?
</title><description><![CDATA[
<p>Here’s one from my <em>archives</em>. To reveal dot files in macOS
<em>Finder</em>, open your Terminal (/Applications/Utilities)
application and then enter,</p>
<blockquote>
<p><code>defaults write com.apple.finder AppleShowAllFiles YES</code><br/></p>
</blockquote>
<p>Then restart Finder by holding down <code>Option</code> and
<code>Control</code>, or right-clicking on the Finder’s icon in your
Dock and choosing “Relaunch”.</p>
<p>To revert this behavior, simply change the <code>YES</code> to
<code>NO</code> in that defaults command.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_finder.html'>finder</a>, <a href='tag_macos.html'>macos</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-reveal-dot-files-in-finder29256.html</link>
<guid>http://www.szumowski.org/./how-to-reveal-dot-files-in-finder29256.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 04 Sep 2023 16:58:18 -0400</pubDate></item>
<item><title>
Install Epson ET-3850 Printer Driver on Slackware 15.0
</title><description><![CDATA[
<p>I recently bought an <em>Epson ET-3850</em> printer from
<em>Costco</em> to replace my <em>HP OfficeJet</em> which was about 10
years old and the family was starting to have issues with establishing a
wi-fi connection to it on their Windoze laptops. It took quite a while
to setup. The <em>Epson</em> seems to be doing the job. Time will tell,
however I discovered that setting it up for <em>Slackware</em> would
also take a bit of effort. Drivers are only available on the
<em>Epson</em> website in <em>RPM</em> or <em>DEB</em> format so I had
to create a <em>Slackware</em> package to install it. Here’s how I went
about doing that.</p>
<ol type="1">
<li>First, download the <em>RPM</em> package from the <a
href="https://epson.com/Support/wa00821">Epson Support website</a>.</li>
<li>Convert the <em>RPM</em> to a <em>Slackware</em> <code>.txz</code>
package using the <code>rpm2txz</code> utility with the following
options:</li>
</ol>
<ul>
<li><code>-c</code>: to make sure the file permissions are set
correctly</li>
<li><code>-S</code>: to extract the install scripts from the
<em>RPM</em> (be careful with this)</li>
<li><code>-n</code>: name the package using standard <em>Slackware</em>
format</li>
<li><code>-d</code>: make a <em>slack-desc</em> from the <em>RPM</em>’s
metadata</li>
</ul>
<blockquote>
<p><code># rpm2txz -c -S -n -d epson-inkjet-printer-escpr2-1.2.4-1.x86_64.rpm</code><br/></p>
</blockquote>
<ol start="3" type="1">
<li>Now review the script. Make any changes, if necessary (I didn’t need
to), and update the converted package:</li>
</ol>
<blockquote>
<p><code># mkdir temp &amp;&amp; cd temp</code><br/>
<code># explodepkg ../epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/>
<code># makepkg -l y -c y ../epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/></p>
</blockquote>
<ol start="4" type="1">
<li>Once that is done you can install it:</li>
</ol>
<blockquote>
<p><code># cd ..</code><br/>
<code># installpkg epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/></p>
</blockquote>
<p>The printer did not show up as available to install in the
“<em>System Settings</em>” app so go to the local <em>CUPS</em> webpage
at <a href="http://localhost:631">http://localhost:631</a> and do the
setup from there. Print a few test pages. It seems to be working fine on
my <em>Slackware</em> laptop. You can move the package to your other
<em>Slackware</em> machines and install there too.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_printers.html'>printers</a>, <a href='tag_epson.html'>epson</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-epson-et-3850-printer-driver-on-slackware-150.html</link>
<guid>http://www.szumowski.org/./install-epson-et-3850-printer-driver-on-slackware-150.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 03 Sep 2023 11:20:00 -0400</pubDate></item>
<item><title>
Vim Keyboard Shortcuts
</title><description><![CDATA[
<ol type="1">
<li><code>gg</code> Move to the first line of the file</li>
<li><code>G</code> Move to the last line</li>
<li><code>gg=G</code> Reindent the whole file</li>
<li><code>gv</code> Reselect the last visual selection</li>
<li><code>&lt;</code> Jump to beginning of last visual selection</li>
<li><code>&gt;</code> Jump to end of last visual selection</li>
<li><code>^</code> Move to first non-blank character of the line</li>
<li><code>g_</code> Move the last non-blank character of the line (but
you remove trailing whitespace, right)</li>
<li><code>g_lD</code> Delete all the trailing whitespace on the
line</li>
<li><code>ea</code> Append to the end of the current word</li>
<li><code>gf</code> Jump to the file name under the cursor</li>
<li><code>xp</code> Swap character forward</li>
<li><code>Xp</code> Swap character backward</li>
<li><code>yyp</code> Duplicate the current line</li>
<li><code>yapP</code> Duplicate the current paragraph</li>
<li><code>dat</code> Delete around an HTML tag, including the tag</li>
<li><code>dit</code> Delete inside an HTML tag, excluding the tag</li>
<li><code>w</code> Move one word to the right</li>
<li><code>b</code> Move one word to the left</li>
<li><code>dd</code> Delete the current line</li>
<li><code>zc</code> Close current fold</li>
<li><code>zo</code> Open current fold</li>
<li><code>za</code> Toggle current fold</li>
<li><code>zi</code> Toggle folding entirely</li>
<li><code>&lt;&lt;</code> Outdent current line</li>
<li><code>&gt;&gt;</code> Indent current line</li>
<li><code>z=</code> Show spelling corrections</li>
<li><code>zg</code> Add to spelling dictionary</li>
<li><code>zw</code> Remove from spelling dictionary</li>
<li><code>~</code> Toggle case of current character</li>
<li><code>gUw</code> Uppercase until end of word (u for lower, ~ to
toggle)</li>
<li><code>gUiw</code> Uppercase entire word (u for lower, ~ to
toggle)</li>
<li><code>gUU</code> Uppercase entire line</li>
<li><code>gu$</code> Lowercase until the end of the line</li>
<li><code>da"</code> Delete the next double-quoted string</li>
<li><code>+</code> Move to the first non-whitespace character of the
next line</li>
<li><code>S</code> Delete current line and go into insert mode</li>
<li><code>I</code> insert at the beginning of the line</li>
<li><code>ci"</code> Change what’s inside the next double-quoted
string</li>
<li><code>ca{</code> Change inside the curly braces (try [, (,
etc.)</li>
<li><code>vaw</code> Visually select word</li>
<li><code>dap</code> Delete the whole paragraph</li>
<li><code>r</code> Replace a character</li>
<li><code>[</code> Jump to beginning of last yanked text</li>
<li><code>]</code> Jump to end of last yanked text</li>
<li><code>g;</code> Jump to the last change you made</li>
<li><code>g,</code> Jump back forward through the change list</li>
<li><code>&amp;</code> Repeat last substitution on current line</li>
<li><code>g&amp;</code> Repeat last substitution on all lines</li>
<li><code>ZZ</code> Save the current file and quit Vim</li>
</ol>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_cheatsheet.html'>cheatsheet</a>, <a href='tag_shortcuts.html'>shortcuts</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-keyboard-shortcuts7928.html</link>
<guid>http://www.szumowski.org/./vim-keyboard-shortcuts7928.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 02 Sep 2023 18:36:46 -0400</pubDate></item>
<item><title>
Linkers
</title><description><![CDATA[
<p>If you’re a developer who is interested in “how the sausage is made”
then you might want to check out Ian Lance Taylor’s <a
href="https://www.airs.com/blog/feed">blog</a> which contains a series
of articles discussed on Klaatu’s GNU World Order <a
href="https://gnuworldorder.info/audiophile/gnuWorldOrder_400.ogg">Episode
400</a> about the <a
href="https://www.airs.com/blog/archives/date/2007/08">linker</a></p>
<p>Here are the links to the articles:</p>
<p><a href="https://www.airs.com/blog/archives/38">Linkers part 1</a> <a
href="https://www.airs.com/blog/archives/39">Linkers part 2</a> <a
href="https://www.airs.com/blog/archives/40">Linkers part 3</a> <a
href="https://www.airs.com/blog/archives/41">Linkers part 4</a> <a
href="https://www.airs.com/blog/archives/42">Linkers part 5</a> <a
href="https://www.airs.com/blog/archives/43">Linkers part 6</a></p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_linkers.html'>linkers</a>, <a href='tag_programming.html'>programming</a>, <a href='tag_compiling.html'>compiling</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/linkers20614.html</link>
<guid>http://www.szumowski.org/./linkers20614.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 01 Sep 2023 18:23:34 -0400</pubDate></item>
<item><title>
Mounting a Remote Drive using FUSE
</title><description><![CDATA[
<p>If you have <em>FUSE</em> (Filessystem in Userspace) installed, you
can use <em>SSH</em> to mount a remote drive locally. This is very
simple to do and you don’t need to be <em>root</em>. You just need
<em>SSH</em> access to the remote system. Just create a directory to
mount the system and use the <code>sshfs</code> command to connect the
remote to it.</p>
<p>Here I will mount my home directory on my remote server named
<em>slacker</em> locally to a directory on my laptop’s home
directory:</p>
<pre><code>$ cd ~
$ mkdir slacker
$ sshfs user@192.168.1.99:/home/user/ slacker
$ cd slacker/
$ ls
Backups       KVM       Public       bin       iso           public_html
Calibre\ Library  Music     PycharmProjects  cv_debug.log  logs          tmp
Desktop       OneDrive  README.txt       file.txt      lynis-report.dat
Documents     Pictures  Templates        fortune.txt   lynis.log
Downloads     Podcasts  Videos       go        pCloudDrive</code></pre>
<p>The above is a listing of my home directory on the remote.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_fuse.html'>fuse</a>, <a href='tag_sshfs.html'>sshfs</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/mounting-a-remote-drive-using-fuse15177.html</link>
<guid>http://www.szumowski.org/./mounting-a-remote-drive-using-fuse15177.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 31 Aug 2023 17:18:46 -0400</pubDate></item>
<item><title>
Install Joplin on Slackware 15.0
</title><description><![CDATA[
<p>On a recent episode of <a
href="https://hackerpublicradio.org/eps/hpr3929/index.html">Hacker
Public Radio</a>, the host, <a
href="https://hackerpublicradio.org/correspondents/0403.html">Lee</a>
listed several note-taking apps that he had tried to use. One of them
was <a href="https://joplinapp.org/">Joplin</a> which I have been using
for several years now. I feel that it is probably one of the best
note-taking apps available that:</p>
<ul>
<li>Supports Markdown</li>
<li>Is cross-platform</li>
<li>Supports vim keyboard mappings (I can’t live without this)</li>
<li>Integrates with multiple cloud storage environments.</li>
</ul>
<p>I use it on a daily basis for almost all of my notes but it also
supports checklists on my iPhone, iPad, Windoze laptop, and all of my
Slackware devices (desktop and laptops). Give it a try!</p>
<p>As of yet, it is not available as a SlackBuild, but you can install
it on Slackware quite easily using the CLI with:</p>
<blockquote>
<p><code>$ wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash</code><br/></p>
</blockquote>
<p>Have fun!</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_joplin.html'>joplin</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_note-apps.html'>note-apps</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-joplin-on-slackware-150.html</link>
<guid>http://www.szumowski.org/./install-joplin-on-slackware-150.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 30 Aug 2023 19:51:21 -0400</pubDate></item>
<item><title>
SlackBuilds: Where Are They Located?
</title><description><![CDATA[
<p>You should find a file in <code>/var/log/packages</code> for each
<em>SlackBuild</em> that you have installed. You can distinguish the
<em>SlackBuilds</em> package from standard Slackware packages by the
substring <em>SBo</em> embedded in the filename. So you can create a
list of all of the <em>SlackBuilds</em> installed on your machine by
just doing an <code>ls *SBo*</code> in that directory.</p>
<blockquote>
<p><code>ls /var/log/packages | grep SBo</code><br/></p>
</blockquote>
<p>or</p>
<blockquote>
<p><code>ls /var/log/packages/*SBo</code><br/></p>
</blockquote>
<p>If you plan on reinstalling it may be a good idea to pipe that
information out to a text file.</p>
<blockquote>
<p><code>ls /var/log/packages | grep SBo &gt; SBo_packages.txt</code><br/></p>
</blockquote>
<p>If you <code>cat</code> one of those files you will display a text
file that lists certain information about the package, the location of
the package and a brief description. For example, the file for
<em>sigil</em> package starts like this:</p>
<blockquote>
<p><code>PACKAGE NAME:     sigil-0.9.12-x86_64-1_SBo</code><br/>
<code>COMPRESSED PACKAGE SIZE:     7.7M</code><br/>
<code>UNCOMPRESSED PACKAGE SIZE:     25M</code><br/>
<code>PACKAGE LOCATION: /tmp/sigil-0.9.12-x86_64-1_SBo.tgz</code><br/>
<code>PACKAGE DESCRIPTION:</code><br/>
<code>sigil: sigil (Multi-platform WYSIWYG ebook editor)</code><br/>
<code>sigil:</code><br/>
<code>sigil: Sigil is a multi-platform WYSIWYG ebook editor. It is designed to</code><br/>
<code>sigil: edit books in ePub format.</code><br/>
<code>sigil:</code><br/>
<code>sigil: Homepage: https://sigil-ebook.com/</code><br/>
<code>sigil:</code><br/></p>
</blockquote>
<p>It then goes on and displays a <em>file list</em> of all of the files
contained by the package and where they were installed.</p>
<p>Armed with the above information, you can the <code>cd</code> to the
<code>/tmp</code> directory and find the package itself:</p>
<blockquote>
<p><code>$ cd /tmp</code><br/>
<code>$ ls -l sigil-0.9.12-x86_64-1_SBo.tgz</code><br/>
<code>-rw-r--r-- 1 root root 8070041 May 29 16:24 sigil-0.9.12-x86_64-1_SBo.tgz</code><br/>
<code>$</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_slackbuilds.html'>slackbuilds</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/slackbuilds-where-are-they-located.html</link>
<guid>http://www.szumowski.org/./slackbuilds-where-are-they-located.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 29 Aug 2023 19:18:32 -0400</pubDate></item>
</channel></rss>
