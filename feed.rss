<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Sun, 17 Sep 2023 11:16:52 -0400</lastBuildDate>
<pubDate>Sun, 17 Sep 2023 11:16:52 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Vim: More Copying Tips
</title><description><![CDATA[
<p>Blocks of lines can be copied in <em>Vim</em> using <em>ranges</em>,
i.e., two numbers separated by a comma indicating the start and end of
the block of lines.</p>
<p><strong>Some Examples</strong></p>
<p>To copy line 20-25, use:</p>
<blockquote>
<p><code>:20,25yank</code><br/></p>
</blockquote>
<p>To copy five lines just above the cursor:</p>
<blockquote>
<p><code>:-4,.yank</code><br/></p>
</blockquote>
<p>where the period (.) indicates the current line.</p>
<p>To copy five lines just below the cursor:</p>
<blockquote>
<p><code>:.,+4yank</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_copy.html'>copy</a>, <a href='tag_ranges.html'>ranges</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-more-copying-tips32632.html</link>
<guid>http://www.szumowski.org/./vim-more-copying-tips32632.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 17 Sep 2023 11:15:09 -0400</pubDate></item>
<item><title>
Log File Maintenance and Cleanup
</title><description><![CDATA[
<p>Log files sometimes take up a lot of disk space. Some applications
have internal processes that run periodically to manage them and some do
not. Often, this becomes a problems after a while as the logs consume
all of your partition space.</p>
<p>You can manage these files yourself with a simple script running in a
<em>cronjob</em> (or systemd timers if you’re so inclined) if they have
a common naming convention and you have the proper access.</p>
<p>Let’s say you have an application called <em>myapp</em> that keeps
it’s logs in a directory called <code>/opt/myapp/logs</code> and those
files all end with a <code>.log</code> file extension.</p>
<blockquote>
<p><code>cat &gt;logmanage.sh &lt;&lt;"EOF"</code><br/>
<code>#!/bin/sh</code><br/> <code>LOGDIR="/opt/myapp/logs"</code><br/>
<code># Compress all of the files older than a day</code><br/>
<code>find ${LOGDIR} -name '*.log' -mtime +0 -exec compress {} \;</code><br/>
<code># Purge all of the logs older than a week</code><br/>
<code>find ${LOGDIR} -name '*.Z' -mtime +7 -exec rm -f {} \;</code><br/>
<code>EOF</code><br/></p>
</blockquote>
<p>These two commands will compress those files that are more than older
than a day and remove the compressed files after a week.</p>
<p>Add a crontab entry to run this everyday and you’re all set.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_sysadmin.html'>sysadmin</a>, <a href='tag_logs.html'>logs</a>, <a href='tag_find.html'>find</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/log-file-maintenance-and-cleanup.html</link>
<guid>http://www.szumowski.org/./log-file-maintenance-and-cleanup.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 16 Sep 2023 19:20:08 -0400</pubDate></item>
<item><title>
Vim: How to Copy &amp; Paste
</title><description><![CDATA[
<p>Most <em>Vim</em> tutorials and cheatsheets out there will cover how
to copy and paste. Pasting is the <em>easy</em> part. Let’s talk about
copying!</p>
<p><strong>Copying</strong></p>
<p>To copy the current line (line in which the cursor is placed), simply
press double lower <code>y</code> (<code>yy</code>) or single upper case
<code>y</code> (<code>Y</code>).</p>
<p><code>yy</code> or <code>Y</code>: copies/yanks the current line,
including the newline character at the end of the line.</p>
<p>To copy a specific number of lines under the cursor (beginning from
the current location of the cursor) simply precede the command with the
number of lines that you wish to copy, i.e., <code>Nyy</code> (where N
is the number of lines).</p>
<p>You can also use the following operation to copy two lines:</p>
<blockquote>
<p><code>:.,+yank</code><br/></p>
</blockquote>
<p>where the dot (.) refers to the current line and plus sign (+) means
plus one line below the cursor.</p>
<p>So, in order to use this syntax to copy 3 lines, use <code>3yy</code>
or <code>:.,+2yank</code> will work.</p>
<p>You can also copy a specific number of lines <em>above</em> the
cursor From the current cursor location use <code>yN-1k</code>, where
<code>N-1</code> is the number of lines you want to copy. So, to copy
two lines from the current position of the cursor, press (in normal
mode, or escape mode), <code>y2-1k</code>, or <code>y1k</code>.</p>
<p>To copy 5 lines above the current cursor position:</p>
<blockquote>
<p><code>y4k</code><br/></p>
</blockquote>
<p>You can also use other operations. for example, to copy only the
fifth line just above the cursor:</p>
<p><strong>Copying &amp; Pasting</strong></p>
<blockquote>
<p><code>:-4yank</code><br/></p>
</blockquote>
<p>You can can copy lines and paste them right above the cursor in one
shot using the operation <code>:Nt-</code>, where <code>N</code> is the
line number you want to copy.</p>
<p>You can can copy specific line number and paste right below the
cursor directly using the operation <code>:Nt.</code>, where
<code>N</code> is the line number you want to copy.</p>
<p>For example, to copy line two and paste just above the current cursor
position;</p>
<blockquote>
<p><code>:2t-</code><br/></p>
</blockquote>
<p>To copy line two and paste just below the current cursor
position;</p>
<blockquote>
<p><code>:2t.</code><br/></p>
</blockquote>
<p>The above commands also work with a range of lines rather than a
single line, such as <code>:4,7t.</code> will yank lines 4-7 and paste
them below the cursor.</p>
<p><strong>Pasting</strong></p>
<p><code>p</code> or <code>P</code>: pastes one or more lines, basically
whatever is in the buffer, under or above the cursor respectively.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-how-to-copy-amp-paste.html</link>
<guid>http://www.szumowski.org/./vim-how-to-copy-amp-paste.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 15 Sep 2023 20:24:45 -0400</pubDate></item>
<item><title>
Format Disk using exFat on Command Line
</title><description><![CDATA[
<p>You may not always be working on a Linux system using a GUI, like a
server or a system with very low resources. Sometimes you may need to
format a disk to exFat using the Command Line. It’s not really that
difficult.</p>
<p>The first thing you need to do is to know which device is to be
formatted so before you connect the disk or USB make sure you run the
<code>lsblk</code> command before and after doing so. This way you will
be certain not to format the wrong disk by mistake and cause a data
loss.</p>
<p>Run <code>lsblk</code> before inserting the disk:</p>
<pre><code># lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda      8:0    0 232.9G  0 disk 
├─sda1   8:1    0   630M  0 part /boot/efi
├─sda2   8:2    0 216.3G  0 part /
└─sda3   8:3    0  15.9G  0 part [SWAP]
sdb      8:16   0   1.4T  0 disk 
├─sdb1   8:17   0   630M  0 part 
├─sdb2   8:18   0 244.1G  0 part /mnt/lfs
├─sdb3   8:19   0   1.1T  0 part /home
└─sdb4   8:20   0  15.6G  0 part 
sdc      8:32   1     0B  0 disk 
sr0     11:0    1  1024M  0 rom  </code></pre>
<p>Then insert the disk and run <code>lsblk</code> again:</p>
<pre><code># lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda      8:0    0 232.9G  0 disk 
├─sda1   8:1    0   630M  0 part /boot/efi
├─sda2   8:2    0 216.3G  0 part /
└─sda3   8:3    0  15.9G  0 part [SWAP]
sdb      8:16   0   1.4T  0 disk 
├─sdb1   8:17   0   630M  0 part 
├─sdb2   8:18   0 244.1G  0 part /mnt/lfs
├─sdb3   8:19   0   1.1T  0 part /home
└─sdb4   8:20   0  15.6G  0 part 
sdc      8:32   1     0B  0 disk 
sdd      8:48   1 979.8M  0 disk  &lt;--+
├─sdd1   8:49   1    50M  0 part  &lt;--|--New device
└─sdd2   8:50   1 928.8M  0 part  &lt;--+
sr0     11:0    1  1024M  0 rom  </code></pre>
<p>Compare the output and you’ll see that in this case, the device
inserted was <code>/dev/sdd</code>.</p>
<p>Armed with that information, we can now begin our task. Start by
invoking <code>parted</code> with the <code>-a optimal</code> option to
specify the <em>optimal</em> alignment type:</p>
<pre><code>root@slacker:~# parted -a optimal /dev/sdd
GNU Parted 3.4
Using /dev/sdd
Welcome to GNU Parted! Type &#39;help&#39; to view a list of commands.</code></pre>
<p>Next, set the partition table to <em>gpt</em>:</p>
<pre><code>(parted) mktable gpt                                                      
Warning: The existing disk label on /dev/sdd will be destroyed and all data on
this disk will be lost. Do you want to continue?
Yes/No? Yes</code></pre>
<p>Now, create a new partition table of exFAT type:</p>
<pre><code>(parted) mkpart exFAT 0% -1                                               </code></pre>
<p>Set the flag for the first partition to <em>msftdata</em>:</p>
<pre><code>(parted) set 1 msftdata on
(parted) align-check opt 1
1 aligned
(parted) quit                                                             
Information: You may need to update /etc/fstab.</code></pre>
<p>Now you should be done. Let’s print out the partition to make sure
everything is OK:</p>
<pre><code># parted /dev/sdd print
Model: SanDisk U3 Cruzer Micro (scsi)
Disk /dev/sdd: 1027MB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags: 

Number  Start   End     Size    File system  Name   Flags
 1      1049kB  1027MB  1026MB  fat32        exFAT  msftdata</code></pre>
<p>Now we can format it:</p>
<pre><code># mkfs.exfat -n exFAT /dev/sdd1
exfatprogs version : 1.1.3
Creating exFAT filesystem(/dev/sdd1, cluster size=32768)

Writing volume boot record: done
Writing backup volume boot record: done
Fat table creation: done
Allocation bitmap creation: done
Upcase table creation: done
Writing root directory entry: done
Synchronizing...

exFAT format complete!
# </code></pre>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_exfat.html'>exfat</a>, <a href='tag_parted.html'>parted</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/format-disk-using-exfat-on-command-line32603.html</link>
<guid>http://www.szumowski.org/./format-disk-using-exfat-on-command-line32603.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 14 Sep 2023 20:37:01 -0400</pubDate></item>
<item><title>
Find Your External IP Address
</title><description><![CDATA[
<p>It’s easy to find your internal IP address my using tools like
ifconfig or ip a but to find your external IP address (the one that
connects you to the outside world) you must use other means. Here are 3
simple commands that you can use to do just that:</p>
<blockquote>
<p><code>$ curl ifcfg.me</code><br/> <code>72.76.yyy.xxx</code><br/>
<code></code><br/> <code>$ curl icanhazip.com</code><br/>
<code>72.76.yyy.xxx</code><br/> <code></code><br/>
<code>$ nslookup myip.opendns.com. resolver1.opendns.com</code><br/>
<code>Server:      resolver1.opendns.com</code><br/>
<code>Address: 208.67.222.222#53</code><br/> <code></code><br/>
<code>Non-authoritative answer:</code><br/>
<code>Name:    myip.opendns.com</code><br/>
<code>Address: 72.76.yyy.xxx</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_network.html'>network</a>, <a href='tag_curl.html'>curl</a>, <a href='tag_nslookup.html'>nslookup</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/find-your-external-ip-address16428.html</link>
<guid>http://www.szumowski.org/./find-your-external-ip-address16428.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 13 Sep 2023 19:01:42 -0400</pubDate></item>
<item><title>
Vim: Underlining a Line
</title><description><![CDATA[
<p>Of course, Vim is <em>just</em> a text editor but you can
<em>underline</em> a line using a set of keystrokes that copies the
string to be underlined to the next line and then replaces the string
with hyphens using this set of Vim commands: <code>YpVr-</code></p>
<p>So if you have a line:</p>
<blockquote>
<p><code>This Is My Page Title</code><br/></p>
</blockquote>
<p>just position the cursor at the start of that line and enter the
abovementioned commands and it will turn it into:</p>
<blockquote>
<p><code>This Is My Page Title</code><br/>
<code>---------------------</code><br/></p>
</blockquote>
<p>This would save you a few keystrokes if you use Vim for creating a
lot of text documentation and use hyphens a lot in your section
headers.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-underlining-a-line32649.html</link>
<guid>http://www.szumowski.org/./vim-underlining-a-line32649.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 12 Sep 2023 17:20:17 -0400</pubDate></item>
<item><title>
Finding Duplicate Files in a Directory Tree
</title><description><![CDATA[
<p>Sometimes I need to find all of the duplicate files in a directory
tree. I have this issue all of the time when I move my music collection.
Here is a nifty script to sort these things out:</p>
<blockquote>
<p><code>#!/bin/bash</code><br/>
<code>find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 -D --all-repeated=separate</code><br/></p>
</blockquote>
<p>If you pipe the output of the above into a text file, for example,
<code>duplicates.txt</code>, you can then create a script from that:</p>
<blockquote>
<p><code>awk '{$1="";printf("rm \"%s\"\n",$0);}' ~/duplicates.txt &gt;~/duplicates.sh</code><br/></p>
</blockquote>
<p>Then edit the file and <strong>remove the lines for the files you
want to keep</strong>, make the script executable and run it. Done.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_duplicates.html'>duplicates</a>, <a href='tag_find.html'>find</a>, <a href='tag_awk.html'>awk</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/finding-duplicate-files-in-a-directory-tree.html</link>
<guid>http://www.szumowski.org/./finding-duplicate-files-in-a-directory-tree.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 11 Sep 2023 17:00:57 -0400</pubDate></item>
<item><title>
Virt-Manager Pool Running Out of Space
</title><description><![CDATA[
<p>Once upon a time, I had an issue with virt-manager’s pool space
running low. I was creating too many VMs using the default
configuration. This needed to be resolved because images are being
created in /var/lib/libvirt/images which was part of my
<code>root</code> partition, which was also low. Since I am the only
user on this machine, I decided to change this to default to my home
directory:</p>
<ol type="1">
<li>Create <code>~/libvirt/images</code></li>
<li>Run <code>$ sudo virsh pool-edit default</code> as a privileged user
or as the <code>root</code> user.</li>
<li>Change the path to point to your new directory.</li>
</ol>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_virt-manager.html'>virt-manager</a>, <a href='tag_virsh.html'>virsh</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/virt-manager-pool-running-out-of-space17838.html</link>
<guid>http://www.szumowski.org/./virt-manager-pool-running-out-of-space17838.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 10 Sep 2023 19:04:00 -0400</pubDate></item>
<item><title>
KVM: Importing an OVA appliance
</title><description><![CDATA[
<p>You may or may not be aware if it, but an <em>OVA</em> file is just a
tar archive containing an <code>.ovf</code> and a <code>.vmdk</code>
files, respectively the VM configuration and disk.</p>
<blockquote>
<p><code>$ ls *.ova</code><br/> <code>HTAOE.ova</code><br/>
<code>$ tar tf HTAOE.ova</code><br/> <code>HTAOE.ovf</code><br/>
<code>HTAOE-disk001.vmdk</code><br/> <code>HTAOE.mf</code><br/></p>
</blockquote>
<p>So, you can simply extract the files:</p>
<blockquote>
<p><code>$ tar xvf HTAOE.ova</code><br/></p>
</blockquote>
<p>And convert to a format appropriate for QEMU/KVM:</p>
<p><strong>List the available formats</strong></p>
<blockquote>
<p><code>$ qemu-img -h | tail -n4</code><br/>
<code>Supported formats: blkdebug blklogwrites blkverify bochs cloop compress copy-before-write copy-on-read dmg file ftp ftps host_cdrom host_device http https luks nbd null-aio null-co nvme parallels preallocate qcow qcow2 qed quorum raw replication ssh throttle vdi vhdx vmdk vpc vvfat</code><br/>
<code></code><br/>
<code>See &lt;https://qemu.org/contribute/report-a-bug&gt; for how to report bugs.</code><br/>
<code>More information on the QEMU project at &lt;https://qemu.org&gt;.</code><br/></p>
</blockquote>
<p><strong>Do the actual conversion (I chose qcow2 here)</strong></p>
<blockquote>
<p><code>$ qemu-img convert -O qcow2 HTAOE.vmdk HTAOE.qcow2</code><br/></p>
</blockquote>
<p>Have a look at the <code>.ovf</code> too, for information on expected
machine configuration, resources (eg. memory and cpu), etc.</p>
<p>After the conversion, simply create a new <em>VM</em> and make it use
the newly created disk as the primary disk.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_kvm.html'>kvm</a>, <a href='tag_ova.html'>ova</a>, <a href='tag_virtualization.html'>virtualization</a>, <a href='tag_qemu.html'>qemu</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/kvm-importing-an-ova-appliance56.html</link>
<guid>http://www.szumowski.org/./kvm-importing-an-ova-appliance56.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 09 Sep 2023 11:34:16 -0400</pubDate></item>
<item><title>
Compiling 32-bit C/C++ Programs on 64-bit
</title><description><![CDATA[
<p>By default, <em>gcc</em> will compile your c/c++ program to 64-bit
instructions. In order to compile to 32-bit you need to add a
<code>-m32</code> flag to the command line. For example, to compile a
file called <em>hello-world.c</em> using a Linux terminal, you would do
something like this:</p>
<blockquote>
<p><code>$ gcc -m32 hello-world.c -o hello-world</code><br/></p>
</blockquote>
<p>If you get the following error:</p>
<blockquote>
<p><code>fatal error: bits/predefs.h: No such file or directory</code><br/></p>
</blockquote>
<p>it means that the <em>multilib</em> standard library is missing.
Therefore, you must install <em>gcc-multlib</em>. The name is different
based upon the distribution and the compiler. For Debian/Ubuntu-based
distros it would be:</p>
<blockquote>
<p><code>$ sudo apt-get install gcc-multilib # For C</code><br/>
<code>$ sudo apt-get install g++-multilib # For C++</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_programming.html'>programming</a>, <a href='tag_c.html'>c</a>, <a href='tag_cpp.html'>cpp</a>, <a href='tag_multilib.html'>multilib</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/compiling-32-bit-cc-programs-on-64-bit.html</link>
<guid>http://www.szumowski.org/./compiling-32-bit-cc-programs-on-64-bit.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 08 Sep 2023 21:06:10 -0400</pubDate></item>
</channel></rss>
