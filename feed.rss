<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Wed, 13 Sep 2023 19:03:32 -0400</lastBuildDate>
<pubDate>Wed, 13 Sep 2023 19:03:32 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Find Your External IP Address
</title><description><![CDATA[
<p>It’s easy to find your internal IP address my using tools like
ifconfig or ip a but to find your external IP address (the one that
connects you to the outside world) you must use other means. Here are 3
simple commands that you can use to do just that:</p>
<blockquote>
<p><code>$ curl ifcfg.me</code><br/> <code>72.76.yyy.xxx</code><br/>
<code></code><br/> <code>$ curl icanhazip.com</code><br/>
<code>72.76.yyy.xxx</code><br/> <code></code><br/>
<code>$ nslookup myip.opendns.com. resolver1.opendns.com</code><br/>
<code>Server:      resolver1.opendns.com</code><br/>
<code>Address: 208.67.222.222#53</code><br/> <code></code><br/>
<code>Non-authoritative answer:</code><br/>
<code>Name:    myip.opendns.com</code><br/>
<code>Address: 72.76.yyy.xxx</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_network.html'>network</a>, <a href='tag_curl.html'>curl</a>, <a href='tag_nslookup.html'>nslookup</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/find-your-external-ip-address16428.html</link>
<guid>http://www.szumowski.org/./find-your-external-ip-address16428.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 13 Sep 2023 19:01:42 -0400</pubDate></item>
<item><title>
Vim: Underlining a Line
</title><description><![CDATA[
<p>Of course, Vim is <em>just</em> a text editor but you can
<em>underline</em> a line using a set of keystrokes that copies the
string to be underlined to the next line and then replaces the string
with hyphens using this set of Vim commands: <code>YpVr-</code></p>
<p>So if you have a line:</p>
<blockquote>
<p><code>This Is My Page Title</code><br/></p>
</blockquote>
<p>just position the cursor at the start of that line and enter the
abovementioned commands and it will turn it into:</p>
<blockquote>
<p><code>This Is My Page Title</code><br/>
<code>---------------------</code><br/></p>
</blockquote>
<p>This would save you a few keystrokes if you use Vim for creating a
lot of text documentation and use hyphens a lot in your section
headers.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_vim.html'>vim</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/vim-underlining-a-line32649.html</link>
<guid>http://www.szumowski.org/./vim-underlining-a-line32649.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 12 Sep 2023 17:20:17 -0400</pubDate></item>
<item><title>
Finding Duplicate Files in a Directory Tree
</title><description><![CDATA[
<p>Sometimes I need to find all of the duplicate files in a directory
tree. I have this issue all of the time when I move my music collection.
Here is a nifty script to sort these things out:</p>
<blockquote>
<p><code>#!/bin/bash</code><br/>
<code>find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 -D --all-repeated=separate</code><br/></p>
</blockquote>
<p>If you pipe the output of the above into a text file, for example,
<code>duplicates.txt</code>, you can then create a script from that:</p>
<blockquote>
<p><code>awk '{$1="";printf("rm \"%s\"\n",$0);}' ~/duplicates.txt &gt;~/duplicates.sh</code><br/></p>
</blockquote>
<p>Then edit the file and <strong>remove the lines for the files you
want to keep</strong>, make the script executable and run it. Done.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_duplicates.html'>duplicates</a>, <a href='tag_find.html'>find</a>, <a href='tag_awk.html'>awk</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/finding-duplicate-files-in-a-directory-tree.html</link>
<guid>http://www.szumowski.org/./finding-duplicate-files-in-a-directory-tree.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 11 Sep 2023 17:00:57 -0400</pubDate></item>
<item><title>
Virt-Manager Pool Running Out of Space
</title><description><![CDATA[
<p>Once upon a time, I had an issue with virt-manager’s pool space
running low. I was creating too many VMs using the default
configuration. This needed to be resolved because images are being
created in /var/lib/libvirt/images which was part of my
<code>root</code> partition, which was also low. Since I am the only
user on this machine, I decided to change this to default to my home
directory:</p>
<ol type="1">
<li>Create <code>~/libvirt/images</code></li>
<li>Run <code>$ sudo virsh pool-edit default</code> as a privileged user
or as the <code>root</code> user.</li>
<li>Change the path to point to your new directory.</li>
</ol>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_virt-manager.html'>virt-manager</a>, <a href='tag_virsh.html'>virsh</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/virt-manager-pool-running-out-of-space17838.html</link>
<guid>http://www.szumowski.org/./virt-manager-pool-running-out-of-space17838.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 10 Sep 2023 19:04:00 -0400</pubDate></item>
<item><title>
KVM: Importing an OVA appliance
</title><description><![CDATA[
<p>You may or may not be aware if it, but an <em>OVA</em> file is just a
tar archive containing an <code>.ovf</code> and a <code>.vmdk</code>
files, respectively the VM configuration and disk.</p>
<blockquote>
<p><code>$ ls *.ova</code><br/> <code>HTAOE.ova</code><br/>
<code>$ tar tf HTAOE.ova</code><br/> <code>HTAOE.ovf</code><br/>
<code>HTAOE-disk001.vmdk</code><br/> <code>HTAOE.mf</code><br/></p>
</blockquote>
<p>So, you can simply extract the files:</p>
<blockquote>
<p><code>$ tar xvf HTAOE.ova</code><br/></p>
</blockquote>
<p>And convert to a format appropriate for QEMU/KVM:</p>
<p><strong>List the available formats</strong></p>
<blockquote>
<p><code>$ qemu-img -h | tail -n4</code><br/>
<code>Supported formats: blkdebug blklogwrites blkverify bochs cloop compress copy-before-write copy-on-read dmg file ftp ftps host_cdrom host_device http https luks nbd null-aio null-co nvme parallels preallocate qcow qcow2 qed quorum raw replication ssh throttle vdi vhdx vmdk vpc vvfat</code><br/>
<code></code><br/>
<code>See &lt;https://qemu.org/contribute/report-a-bug&gt; for how to report bugs.</code><br/>
<code>More information on the QEMU project at &lt;https://qemu.org&gt;.</code><br/></p>
</blockquote>
<p><strong>Do the actual conversion (I chose qcow2 here)</strong></p>
<blockquote>
<p><code>$ qemu-img convert -O qcow2 HTAOE.vmdk HTAOE.qcow2</code><br/></p>
</blockquote>
<p>Have a look at the <code>.ovf</code> too, for information on expected
machine configuration, resources (eg. memory and cpu), etc.</p>
<p>After the conversion, simply create a new <em>VM</em> and make it use
the newly created disk as the primary disk.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_kvm.html'>kvm</a>, <a href='tag_ova.html'>ova</a>, <a href='tag_virtualization.html'>virtualization</a>, <a href='tag_qemu.html'>qemu</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/kvm-importing-an-ova-appliance56.html</link>
<guid>http://www.szumowski.org/./kvm-importing-an-ova-appliance56.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 09 Sep 2023 11:34:16 -0400</pubDate></item>
<item><title>
Compiling 32-bit C/C++ Programs on 64-bit
</title><description><![CDATA[
<p>By default, <em>gcc</em> will compile your c/c++ program to 64-bit
instructions. In order to compile to 32-bit you need to add a
<code>-m32</code> flag to the command line. For example, to compile a
file called <em>hello-world.c</em> using a Linux terminal, you would do
something like this:</p>
<blockquote>
<p><code>$ gcc -m32 hello-world.c -o hello-world</code><br/></p>
</blockquote>
<p>If you get the following error:</p>
<blockquote>
<p><code>fatal error: bits/predefs.h: No such file or directory</code><br/></p>
</blockquote>
<p>it means that the <em>multilib</em> standard library is missing.
Therefore, you must install <em>gcc-multlib</em>. The name is different
based upon the distribution and the compiler. For Debian/Ubuntu-based
distros it would be:</p>
<blockquote>
<p><code>$ sudo apt-get install gcc-multilib # For C</code><br/>
<code>$ sudo apt-get install g++-multilib # For C++</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_programming.html'>programming</a>, <a href='tag_c.html'>c</a>, <a href='tag_cpp.html'>cpp</a>, <a href='tag_multilib.html'>multilib</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/compiling-32-bit-cc-programs-on-64-bit.html</link>
<guid>http://www.szumowski.org/./compiling-32-bit-cc-programs-on-64-bit.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 08 Sep 2023 21:06:10 -0400</pubDate></item>
<item><title>
How to Clean Up the Fedora Root Folder
</title><description><![CDATA[
<p>OK, so you’re running <em>Fedora</em> and you’re getting warnings
that you’re running out of disk space on the <em>root</em> folder. What
are your options?</p>
<p>The first thing to consider is <em>resizing</em> the root partition
size. For that you can find instructions <a
href="https://gist.github.com/181192/cf7eb42a25538ccdb8d0bb7dd57cf236">here</a></p>
<p>If that is not an option, then the next thing you probably should do
is find out which folders/directories are causing the issue. You can use
the <code>du</code> command and some piping to figure this out:</p>
<p><strong>Search the largest folders</strong></p>
<blockquote>
<p><code>$ sudo du --exclude="/home" -x -h -a / | sort -r -h | head -30</code><br/></p>
</blockquote>
<p><strong>Common cleanable folders</strong></p>
<p>Sometimes the issue is found in the docker cache:</p>
<blockquote>
<p><code>$ docker system prune -a</code><br/></p>
</blockquote>
<p>or previous kernel versions:</p>
<blockquote>
<p><code>$ sudo dnf remove $(dnf repoquery --installonly --latest-limit=-2 -q)</code><br/></p>
</blockquote>
<p><strong>Journal logs</strong></p>
<blockquote>
<p><code>$ sudo journalctl --vacuum-size=100M</code><br/></p>
</blockquote>
<p><strong>Caches</strong></p>
<p>The dnf package cache can be cleaned up too:</p>
<blockquote>
<p><code>$ sudo dnf clean packages</code><br/></p>
</blockquote>
<p>You can also try cleaning up the Fedora version cache:</p>
<blockquote>
<p><code>$ sudo dnf system-upgrade clean</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_fedora.html'>fedora</a>, <a href='tag_disk-space.html'>disk-space</a>, <a href='tag_clean.html'>clean</a>, <a href='tag_resize.html'>resize</a>, <a href='tag_sysadmin.html'>sysadmin</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-clean-up-the-fedora-root-folder.html</link>
<guid>http://www.szumowski.org/./how-to-clean-up-the-fedora-root-folder.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 06 Sep 2023 17:05:55 -0400</pubDate></item>
<item><title>
Install Spotify using Flatpak using Command Line
</title><description><![CDATA[
<p>If <em>Flatpak</em> is not installed, then install it:</p>
<blockquote>
<p><code>$ sudo dnf install -y flatpak   # Fedora</code><br/>
<code>$ sudo apt install flatpak      # Ubuntu-based</code><br/>
<code>$ sudo zypper install flatpak   # SUSE</code><br/>
<code>$ sudo pacman -S flatpak        # Arch-based</code><br/></p>
</blockquote>
<p>Since <em>flathub.org</em> is the most popular flatpak repository we
will use the command line to enable it:</p>
<blockquote>
<p><code>$ flatpak remote-add --if-not-exists flathub \</code><br/>
<code>https://flathub.org/repo/flathub.flatpakrepo</code><br/></p>
</blockquote>
<p>Go to the <a
href="https://flathub.org/apps/details/com.spotify.Client">Spotify page
on Flathub</a> and choose “Install”, or run the installation from the
command line:</p>
<blockquote>
<p><code>$ sudo flatpak install flathub com.spotify.Client</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_flatpak.html'>flatpak</a>, <a href='tag_spotify.html'>spotify</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-spotify-using-flatpak-using-command-line.html</link>
<guid>http://www.szumowski.org/./install-spotify-using-flatpak-using-command-line.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 05 Sep 2023 16:33:17 -0400</pubDate></item>
<item><title>
How to reveal dot files in finder?
</title><description><![CDATA[
<p>Here’s one from my <em>archives</em>. To reveal dot files in macOS
<em>Finder</em>, open your Terminal (/Applications/Utilities)
application and then enter,</p>
<blockquote>
<p><code>defaults write com.apple.finder AppleShowAllFiles YES</code><br/></p>
</blockquote>
<p>Then restart Finder by holding down <code>Option</code> and
<code>Control</code>, or right-clicking on the Finder’s icon in your
Dock and choosing “Relaunch”.</p>
<p>To revert this behavior, simply change the <code>YES</code> to
<code>NO</code> in that defaults command.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_finder.html'>finder</a>, <a href='tag_macos.html'>macos</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-reveal-dot-files-in-finder29256.html</link>
<guid>http://www.szumowski.org/./how-to-reveal-dot-files-in-finder29256.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 04 Sep 2023 16:58:18 -0400</pubDate></item>
<item><title>
Install Epson ET-3850 Printer Driver on Slackware 15.0
</title><description><![CDATA[
<p>I recently bought an <em>Epson ET-3850</em> printer from
<em>Costco</em> to replace my <em>HP OfficeJet</em> which was about 10
years old and the family was starting to have issues with establishing a
wi-fi connection to it on their Windoze laptops. It took quite a while
to setup. The <em>Epson</em> seems to be doing the job. Time will tell,
however I discovered that setting it up for <em>Slackware</em> would
also take a bit of effort. Drivers are only available on the
<em>Epson</em> website in <em>RPM</em> or <em>DEB</em> format so I had
to create a <em>Slackware</em> package to install it. Here’s how I went
about doing that.</p>
<ol type="1">
<li>First, download the <em>RPM</em> package from the <a
href="https://epson.com/Support/wa00821">Epson Support website</a>.</li>
<li>Convert the <em>RPM</em> to a <em>Slackware</em> <code>.txz</code>
package using the <code>rpm2txz</code> utility with the following
options:</li>
</ol>
<ul>
<li><code>-c</code>: to make sure the file permissions are set
correctly</li>
<li><code>-S</code>: to extract the install scripts from the
<em>RPM</em> (be careful with this)</li>
<li><code>-n</code>: name the package using standard <em>Slackware</em>
format</li>
<li><code>-d</code>: make a <em>slack-desc</em> from the <em>RPM</em>’s
metadata</li>
</ul>
<blockquote>
<p><code># rpm2txz -c -S -n -d epson-inkjet-printer-escpr2-1.2.4-1.x86_64.rpm</code><br/></p>
</blockquote>
<ol start="3" type="1">
<li>Now review the script. Make any changes, if necessary (I didn’t need
to), and update the converted package:</li>
</ol>
<blockquote>
<p><code># mkdir temp &amp;&amp; cd temp</code><br/>
<code># explodepkg ../epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/>
<code># makepkg -l y -c y ../epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/></p>
</blockquote>
<ol start="4" type="1">
<li>Once that is done you can install it:</li>
</ol>
<blockquote>
<p><code># cd ..</code><br/>
<code># installpkg epson-inkjet-printer-escpr2-1.2.4-x86_64-1.txz</code><br/></p>
</blockquote>
<p>The printer did not show up as available to install in the
“<em>System Settings</em>” app so go to the local <em>CUPS</em> webpage
at <a href="http://localhost:631">http://localhost:631</a> and do the
setup from there. Print a few test pages. It seems to be working fine on
my <em>Slackware</em> laptop. You can move the package to your other
<em>Slackware</em> machines and install there too.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_printers.html'>printers</a>, <a href='tag_epson.html'>epson</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-epson-et-3850-printer-driver-on-slackware-150.html</link>
<guid>http://www.szumowski.org/./install-epson-et-3850-printer-driver-on-slackware-150.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 03 Sep 2023 11:20:00 -0400</pubDate></item>
</channel></rss>
