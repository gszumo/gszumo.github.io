<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Gregg's MOTD</title><link>http://www.szumowski.org/index.html</link>
<description>Tips & Tricks that I've Encountered Over the Years...</description><language>en</language>
<lastBuildDate>Mon, 26 Jun 2023 19:11:47 -0400</lastBuildDate>
<pubDate>Mon, 26 Jun 2023 19:11:47 -0400</pubDate>
<atom:link href="http://www.szumowski.org/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
RHEL QCOW Image Password
</title><description><![CDATA[
<p>Did you know that although you can install RHEL from an
<code>ISO</code>, you can also download a <code>QCOW2</code> image from
Red Hat. However, when you try to start it up under
<code>virt-manager</code> you’ll see that it boots to a
<code>root</code> prompt and you don’t know what the password is. This
can be fixed by running the following from the host’s terminal:</p>
<blockquote>
<p><code># virt-customize -a &lt;qcow2-image-file-name&gt; --root-password password:&lt;password&gt;</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_qcow.html'>qcow</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/rhel-qcow-image-password23397.html</link>
<guid>http://www.szumowski.org/./rhel-qcow-image-password23397.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 26 Jun 2023 19:07:09 -0400</pubDate></item>
<item><title>
Find System Hogs and Child Processes
</title><description><![CDATA[
<p>There are a lot of tools out there that can help you to do this that
are both GUI or command line-based but sometimes you’re on a production
server that may have limited tools and sometimes the simplest tools are
best in cases like this.</p>
<p>List the processes that are not owned by you that are using a lot of
CPU:</p>
<blockquote>
<p><code>$ ps aux --sort=-%cpu | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>or by memory:</p>
<blockquote>
<p><code>$ ps aux --sort=-%mem | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>or by longest running process:</p>
<blockquote>
<p><code>$ ps aux --sort=-time | grep -m 8 -v</code>whoami<code></code><br/></p>
</blockquote>
<p>List processes by a specific user:</p>
<blockquote>
<p><code>$ ps -U gszumo</code><br/></p>
</blockquote>
<p>or multiple users:</p>
<blockquote>
<p><code>$ ps -U gszumo -U katy</code><br/></p>
</blockquote>
<p>You can see child proceses:</p>
<blockquote>
<p><code>$ ps -eo pid,args --forest</code><br/></p>
</blockquote>
<p>or children of a specific process:</p>
<blockquote>
<p><code>$ ps -f --ppid 4775</code><br/></p>
</blockquote>
<p>I don’t remember where I found these tips but they have come in handy
on many occasions and I am documenting them here hoping that readers
(whatever few there are) will also benefit from them.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ps.html'>ps</a>, <a href='tag_processes.html'>processes</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/find-system-hogs-and-child-processes30247.html</link>
<guid>http://www.szumowski.org/./find-system-hogs-and-child-processes30247.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 25 Jun 2023 11:20:06 -0400</pubDate></item>
<item><title>
How to List Installed Packages in Fedora, RHEL, CentOS
</title><description><![CDATA[
<p>Listing installed packages with YUM:</p>
<blockquote>
<p><code>$ sudo yum list installed</code><br/></p>
</blockquote>
<p>To display details about a package:</p>
<blockquote>
<p><code>$ yum info nginx</code><br/></p>
</blockquote>
<p>You can cat all installed packages to a file, copy the file to
another machine and duplicate the system:</p>
<blockquote>
<p><code>$ sudo yum list installed &gt; installed-packages.txt</code><br/>
<code>$ sudo yum -y install $(cat installed-packages.txt)</code><br/></p>
</blockquote>
<p>List installed packages with RPM:</p>
<blockquote>
<p><code>$ sudo rpm -qa</code><br/></p>
</blockquote>
<p>List them by installation date:</p>
<blockquote>
<p><code>$ sudo rpm -qa --last</code><br/></p>
</blockquote>
<p>Display information about a package:</p>
<blockquote>
<p><code>$ rpm -qi nginx</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_rpm.html'>rpm</a>, <a href='tag_yum.html'>yum</a>, <a href='tag_rhel.html'>rhel</a>, <a href='tag_fedora.html'>fedora</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/how-to-list-installed-packages-in-fedora-rhel-centos.html</link>
<guid>http://www.szumowski.org/./how-to-list-installed-packages-in-fedora-rhel-centos.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 24 Jun 2023 17:47:43 -0400</pubDate></item>
<item><title>
Git: Deleting Multiple Commits
</title><description><![CDATA[
<p>Let’s say that you want to delete the last 3 commits that you’ve
already pushed to the remote repository. In this example, you want
<code>566dab6</code> to be the new HEAD revision.</p>
<blockquote>
<p><code>$ git log --pretty=oneline --abbrev-commit</code><br/>
<code>57bc36b (HEAD -&gt; master, origin/master, origin/HEAD) 3nd set of bad entries on 6th commit</code><br/>
<code>dfb4bd3 2nd set of bad entries on 5th commit</code><br/>
<code>0fd1e16 First set of bad entries on 4th commit</code><br/>
<code>566dab6 Yet more good entries on third commit</code><br/>
<code>d50370a More good entries on second commit</code><br/>
<code>b5fbc6d Good entries on first commit</code><br/>
<code>2cad4c7 Initial commit</code><br/></p>
</blockquote>
<p>You can use <code>git reset</code>, <code>git revert</code>, or
<code>git checkout</code> to achieve this goal.</p>
<p><strong>Using reset:</strong></p>
<blockquote>
<p><code>$ git reset --hard HEAD~3</code><br/> <br/>
<code>$ git log --pretty=oneline --abbrev-commit</code><br/>
<code>566dab6 (HEAD -&gt; master) Yet more good entries on third commit</code><br/>
<code>d50370a More good entries on second commit</code><br/>
<code>b5fbc6d Good entries on first commit</code><br/>
<code>2cad4c7 Initial commit</code><br/></p>
</blockquote>
<p>Then you have to force push to the origin:</p>
<blockquote>
<p><code>$ git push --force</code><br/></p>
</blockquote>
<p><strong>Using revert:</strong></p>
<blockquote>
<p><code>$ git revert --no-commit 57bc36b</code><br/>
<code>$ git revert --no-commit dfb4bd3</code><br/>
<code>$ git revert --no-commit 0fd1e16</code><br/></p>
</blockquote>
<p>or do all 3 at once:</p>
<blockquote>
<p><code>$ git revert --no-commit HEAD~3..</code><br/></p>
</blockquote>
<p>Then do the commit:</p>
<blockquote>
<p><code>$ git commit -m "Fixed commits"</code><br/> <br/>
<code>$ git log --pretty=oneline --abbrev-commit</code><br/>
<code>0da0f42 (HEAD -&gt; master) Fixed commits</code><br/>
<code>57bc36b 3nd set of bad entries on 6th commit</code><br/>
<code>dfb4bd3 2nd set of bad entries on 5th commit</code><br/>
<code>0fd1e16 First set of bad entries on 4th commit</code><br/>
<code>566dab6 Yet more good entries on third commit</code><br/>
<code>d50370a More good entries on second commit</code><br/>
<code>b5fbc6d Good entries on first commit</code><br/>
<code>2cad4c7 Initial commit</code><br/></p>
</blockquote>
<p><strong>Using checkout:</strong></p>
<p>Checkout that revision over the top of local files</p>
<blockquote>
<p><code>$ git checkout -f 566dab6 -- .</code><br/>
<code>$ git commit -a</code><br/> <br/>
<code>$ git log --pretty=oneline --abbrev-commit</code><br/>
<code>0da0f42 (HEAD -&gt; master) Fixed commits</code><br/>
<code>57bc36b 3nd set of bad entries on 6th commit</code><br/>
<code>dfb4bd3 2nd set of bad entries on 5th commit</code><br/>
<code>0fd1e16 First set of bad entries on 4th commit</code><br/>
<code>566dab6 Yet more good entries on third commit</code><br/>
<code>d50370a More good entries on second commit</code><br/>
<code>b5fbc6d Good entries on first commit</code><br/>
<code>2cad4c7 Initial commit</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_git.html'>git</a>, <a href='tag_source-control.html'>source-control</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/git-deleting-multiple-commits24780.html</link>
<guid>http://www.szumowski.org/./git-deleting-multiple-commits24780.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Fri, 23 Jun 2023 12:54:32 -0400</pubDate></item>
<item><title>
Solus OS: Prevent Laptop from Sleeping When Closing the Lid
</title><description><![CDATA[
<p>If you’re using a laptop with an external monitor and you’ve recently
installed Solus OS you might have noticed that the laptop goes to sleep
when you close the lid and there is no way to adjust for this in the
power settings. You can get around this by manually editing
<code>/etc/systemd/logind.conf</code>, then uncommenting and changing
the line:</p>
<blockquote>
<p><code>#HandleLidSwitch=suspend</code><br/></p>
</blockquote>
<p>to</p>
<blockquote>
<p><code>HandleLidSwitch=ignore</code><br/></p>
</blockquote>
<p>Note: The ‘#’ (comment) at the beginning of the line needs to be
removed and the value needs to be changed from <code>suspend</code> to
<code>ignore</code>.</p>
<p>Tags: <a href='tag_linux.html'>linux</a>, <a href='tag_solus.html'>solus</a>, <a href='tag_power.html'>power</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/solus-os-prevent-laptop-from-sleeping-when-closing-the-lid.html</link>
<guid>http://www.szumowski.org/./solus-os-prevent-laptop-from-sleeping-when-closing-the-lid.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Thu, 22 Jun 2023 15:42:40 -0400</pubDate></item>
<item><title>
Speed Up Firefox
</title><description><![CDATA[
<p>If you are experiencing <em>tearing</em> while using
<code>Firefox</code> you may want to see if graphics accelleration is
enabled on the browser. You can try this tip to force hardware
accelleration on in the browser.</p>
<p>First, check to make sure that your Linux desktop installation
supports it by running the following command and making sure that
<code>direct rendering</code> returns <code>Yes</code>:</p>
<blockquote>
<p><code>$ glxinfo | grep render</code><br/>
<code>direct rendering: Yes</code><br/></p>
</blockquote>
<p>Then, open Firefox if it’s not already running, and enter
<code>about:config</code> in the address bar. Click
<code>Accept The Risk And Continue</code> when prompted, to get to the
<code>Firefox Advanced Configuration Editor</code></p>
<p>Search for “<code>layers.acceleration.force-enabled</code>” and you
should then see it listed in the results.</p>
<p>Click the right and left pointing arrow icon associated with the
entry until false changes to true. Once that’s taken care of, close and
restart Firefox.</p>
<p>If you don’t see <code>layers.acceleration.force-enabled</code>
listed, you’ll need to create it by right-clicking an empty area and
selecting New | Boolean. Name the new entry
<code>layers.acceleration.force-enabled</code> and set it to true.
Restart Firefox and you’re done.</p>
<p>If you notice any issues with Firefox after that and you need to
revert your change, just search again and toggle it back to
<code>false</code>.</p>
<p>Some folks report that setting <code>gfx.xrender.enabled=true</code>
and <code>layers.acceleration.force-enabled</code> and
<code>layers.force-active</code> also works. YMMV ;^)</p>
<p>Tags: <a href='tag_firefox.html'>firefox</a>, <a href='tag_tearing.html'>tearing</a>, <a href='tag_accelleration.html'>accelleration</a>, <a href='tag_glxinfo.html'>glxinfo</a>, <a href='tag_direct-rendering.html'>direct-rendering</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/speed-up-firefox24999.html</link>
<guid>http://www.szumowski.org/./speed-up-firefox24999.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Wed, 21 Jun 2023 17:46:55 -0400</pubDate></item>
<item><title>
Deleting Blank Lines Using Grep
</title><description><![CDATA[
<p>If you have a file (or a stream) that has blank lines you want to
remove, you can use this command:</p>
<blockquote>
<p><code>$ grep -v "^ *$" file-with-blanks.txt &gt; output-file.txt</code></p>
</blockquote>
<p>where <code>file-with-blanks.txt</code> is the input file and has
blank lines and <code>output-file.txt</code> will be the output file
without the blank lines.</p>
<p>You have to keep the <code>space</code> between the <code>^</code>
and the <code>*$</code> otherwise blank lines which include spaces will
not be removed.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_grep.html'>grep</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/deleting-blank-lines-using-grep16496.html</link>
<guid>http://www.szumowski.org/./deleting-blank-lines-using-grep16496.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Tue, 20 Jun 2023 10:35:38 -0400</pubDate></item>
<item><title>
Convert webm to mp4
</title><description><![CDATA[
<p>You can use ffmpeg to convert webm to mp4 on the command line very
easily:</p>
<blockquote>
<p><code>$ ffmpeg -i file.webm -c copy file.mp4</code><br/></p>
</blockquote>
<p>This will stream copy (re-mux) and avoid re-encoding.</p>
<p>Tags: <a href='tag_cli.html'>cli</a>, <a href='tag_ffmpeg.html'>ffmpeg</a>, <a href='tag_webm.html'>webm</a>, <a href='tag_mp4.html'>mp4</a>, <a href='tag_convert.html'>convert</a>, <a href='tag_video.html'>video</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/convert-webm-to-mp429535.html</link>
<guid>http://www.szumowski.org/./convert-webm-to-mp429535.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Mon, 19 Jun 2023 11:12:17 -0400</pubDate></item>
<item><title>
Install KDbg - A KDE gdb GUI on Slackware 15.0
</title><description><![CDATA[
<p>What is KDbg?</p>
<p>From the <a href="https://www.kdbg.org/">homepage</a>:</p>
<p>KDbg is a graphical user interface to gdb, the GNU debugger. It
provides an intuitive interface for setting breakpoints, inspecting
variables, and stepping through code.</p>
<p>KDbg requires KDE, the K Desktop Environment, but you can of course
debug any program.</p>
<p>Here’s how to install it on Slackware 15 but this should work on any
system that has KDE:</p>
<blockquote>
<p><code>$ git clone -b maint https://github.com/j6t/kdbg.git</code><br/>
<code>$ cd kdbg/</code><br/> <code>$ cmake .</code><br/>
<code>$ make</code><br/> <code>$ su -c "make install"</code><br/></p>
</blockquote>
<p>Tags: <a href='tag_debugging.html'>debugging</a>, <a href='tag_gdb.html'>gdb</a>, <a href='tag_kde.html'>kde</a>, <a href='tag_slackware.html'>slackware</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/install-kdbg---a-kde-gdb-gui-on-slackware-150.html</link>
<guid>http://www.szumowski.org/./install-kdbg---a-kde-gdb-gui-on-slackware-150.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sun, 18 Jun 2023 10:39:29 -0400</pubDate></item>
<item><title>
Exporting your Pocket List Data
</title><description><![CDATA[
<p>The links you save to your Pocket are stored on Pocket’s servers. In
other words, they’re stored “in the cloud”.</p>
<p>This means that your List will be available on any computer or mobile
device (phone or tablet) that is connected to your Pocket account. To
log in to Pocket, please visit our website or download any of our mobile
apps, then log in with your Pocket username and password.</p>
<p>Because your List is stored in the cloud, you do not need to create
special backups of your saved Pocket items. However, If you wish to
download your list for other uses you can use our export tool which
creates a downloadable HTML file with your List and Archive.</p>
<p>To access our export tool, click here:</p>
<blockquote>
<p><code>http://getpocket.com/export</code></p>
</blockquote>
<p>Then click on the <code>Export HTML file</code> link to download your
Pocket data.</p>
<p>Tags: <a href='tag_pocket.html'>pocket</a>, <a href='tag_bookmarks.html'>bookmarks</a>, <a href='tag_motd.html'>motd</a></p>
<!-- text end -->
]]></description><link>http://www.szumowski.org/exporting-your-pocket-list-data2865.html</link>
<guid>http://www.szumowski.org/./exporting-your-pocket-list-data2865.html</guid>
<dc:creator>Gregg Szumowski</dc:creator>
<pubDate>Sat, 17 Jun 2023 10:46:08 -0400</pubDate></item>
</channel></rss>
