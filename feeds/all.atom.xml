<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Gregg Szumowski</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-06-20T21:34:06-05:00</updated><entry><title>"xhyve Installing and Configuration"</title><link href="/xhyve-installing-and-configuration.html" rel="alternate"></link><published>2019-06-20T21:34:06-05:00</published><updated>2019-06-20T21:34:06-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2019-06-20:/xhyve-installing-and-configuration.html</id><summary type="html">&lt;p&gt;Recently, I've been trying to improve the performance of virtualization on my 2012 MacBook Pro. I've heard about a virtualization tool called bhyve on FreeBSD and understood that it was being ported to macOS. I found this article, &lt;a href="https://dan.langille.org/2018/10/02/running-freebsd-on-osx-using-xhyve-a-port-of-bhyve/"&gt;Running FreeBSD on OSX using xhyve, a port of bhyve&lt;/a&gt; on Dan …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I've been trying to improve the performance of virtualization on my 2012 MacBook Pro. I've heard about a virtualization tool called bhyve on FreeBSD and understood that it was being ported to macOS. I found this article, &lt;a href="https://dan.langille.org/2018/10/02/running-freebsd-on-osx-using-xhyve-a-port-of-bhyve/"&gt;Running FreeBSD on OSX using xhyve, a port of bhyve&lt;/a&gt; on Dan Langille's blog and decided to have a go at installing it.&lt;/p&gt;
&lt;p&gt;At first I just figured that I would check if it could be installed via Homebrew and to my surprise I found that I had already installed it quite some time ago. So the next thing was to see if I could get it to work. I checked Homebrew to see if there were any other package available that would offer me some sort of GUI for xhyve, but unfortunately the only other package available was related to a driver for Docker. That's OK though, since I like using the command line better for these situations because you really get a better understanding of how the tool really works that way. So I commenced work.&lt;/p&gt;
&lt;p&gt;I decided to start with Langille's scripts to see if I could get FreeBSD up and running.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the latest FreeBSD 12.0 ISO file&lt;/li&gt;
&lt;li&gt;Create an image (img file) to be used as the target drive&lt;/li&gt;
&lt;li&gt;Use Langille's first script to install the ISO to the img file&lt;/li&gt;
&lt;li&gt;Convert the installation script to a run script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seems simple enough. But....&lt;/p&gt;
&lt;p&gt;I downloaded the FreeBSD ISO image from freebsd.org as instructed. He used an older version but I wanted to use the latest. Who can argue with that?&lt;/p&gt;
&lt;p&gt;Step 1. &lt;a href="https://download.freebsd.org/ftp/releases/amd64/amd64/ISO-IMAGES/12.0/"&gt;Download FreeBS from here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 2. Create the target image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkfile -nv 50g fbsd.img
fbsd.img &lt;span class="m"&gt;53687091200&lt;/span&gt; bytes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is where you will be installing FreeBSD, so make sure that you create a image large enough for your needs. In my case I don't really need much space.&lt;/p&gt;
&lt;p&gt;Step 3. Modify Langille's script to your needs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;BOOTVOLUME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FreeBSD-12.0-RELEASE-amd64-disc1.iso&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;IMG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fbsd.img&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../build/Release:build:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

../build/xhyve &lt;span class="se"&gt;\&lt;/span&gt;
    -A &lt;span class="se"&gt;\&lt;/span&gt;
    -m 2G &lt;span class="se"&gt;\&lt;/span&gt;
    -c &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;0&lt;/span&gt;:0,hostbridge &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;2&lt;/span&gt;:0,virtio-net &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;3&lt;/span&gt;:0,ahci-cd,&lt;span class="nv"&gt;$BOOTVOLUME&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;4&lt;/span&gt;:0,virtio-blk,&lt;span class="nv"&gt;$IMG&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;31&lt;/span&gt;,lpc &lt;span class="se"&gt;\&lt;/span&gt;
    -l com1,stdio &lt;span class="se"&gt;\&lt;/span&gt;
    -f fbsd,../test/userboot.so,&lt;span class="nv"&gt;$BOOTVOLUME&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run your installation script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ./xhyveinstall-freebsd.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should now get a boot screen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;______               ____   _____ _____
|  ____|             |  _ \ / ____|  __ \
| |___ _ __ ___  ___ | |_) | (___ | |  | |
|  ___| &amp;#39;__/ _ \/ _ \|  _ &amp;lt; \___ \| |  | |
| |   | | |  __/  __/| |_) |____) | |__| |
| |   | | |    |    ||     |      |      |
|_|   |_|  \___|\___||____/|_____/|_____/    ```                        `
                                           s` `.....---.......--.```   -/
+============Welcome to FreeBSD===========+ +o   .--`         /y:`      +.
|                                         |  yo`:.            :o      `+-
|  1. Boot Multi User [Enter]             |   y/               -/`   -o/
|  2. Boot [S]ingle User                  |  .-                  ::/sy+:.
|  3. [Esc]ape to loader prompt           |  /                     `--  /
|  4. Reboot                              | `:                          :`
|                                         | `:                          :`
|  Options:                               |  /                          /
|  5. [K]ernel: kernel (1 of 2)           |  .-                        -.
|  6. Configure Boot [O]ptions...         |   --                      -.
|                                         |    `:`                  `:`
|                                         |      .--             `--.
|                                         |         .---.....----.
+=========================================+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Complete the installation as you normally would for FreeBSD and return to the shell prompt. Then modify the installation script that you just ran and fix it so it becomes a run script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;IMG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fbsd.img&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../build/Release:build:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

xhyve &lt;span class="se"&gt;\&lt;/span&gt;
    -A &lt;span class="se"&gt;\&lt;/span&gt;
    -m 2G &lt;span class="se"&gt;\&lt;/span&gt;
    -c &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;0&lt;/span&gt;:0,hostbridge &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;2&lt;/span&gt;:0,virtio-net &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;4&lt;/span&gt;:0,virtio-blk,&lt;span class="nv"&gt;$IMG&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="m"&gt;31&lt;/span&gt;,lpc &lt;span class="se"&gt;\&lt;/span&gt;
    -l com1,stdio &lt;span class="se"&gt;\&lt;/span&gt;
    -f fbsd,../test/userboot.so,&lt;span class="nv"&gt;$IMG&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run your run script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ./xhyverun-freebsd.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Congratulations! You're running FreeBSD under xhyve!&lt;/p&gt;
&lt;p&gt;Next time: Ubuntu 18.04 under xhyve.&lt;/p&gt;</content></entry><entry><title>"Solus OS: How to Prevent Your Laptop from Going to Sleep When You Close the Lid"</title><link href="/solus-os-how-to-prevent-your-laptop-from-going-to-sleep-when-you-close-the-lid.html" rel="alternate"></link><published>2017-12-14T19:07:10-05:00</published><updated>2017-12-14T19:07:10-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-12-14:/solus-os-how-to-prevent-your-laptop-from-going-to-sleep-when-you-close-the-lid.html</id><summary type="html">&lt;p&gt;If you're using a laptop with an external monitor and you've recently installed Solus OS you might have noticed that the laptop goes to sleep when you close the lid and there is no way to adjust for this in the power settings. You can get around this by manually …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you're using a laptop with an external monitor and you've recently installed Solus OS you might have noticed that the laptop goes to sleep when you close the lid and there is no way to adjust for this in the power settings. You can get around this by manually editing &lt;code&gt;/etc/systemd/logind.conf&lt;/code&gt; and changing the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; #HandleLidSwitch=suspend
 to
 HandleLidSwitch=ignore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note the '#' at the beginning of the line needs to be removed.&lt;/p&gt;</content></entry><entry><title>"Count Occurences of a Character in a String"</title><link href="/count-occurences-of-a-character-in-a-string.html" rel="alternate"></link><published>2017-11-04T21:07:52-05:00</published><updated>2017-11-04T21:07:52-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-11-04:/count-occurences-of-a-character-in-a-string.html</id><summary type="html">&lt;p&gt;Sometimes I need to know how many times a specific character occurs in a string. The best tool to use for something like that is AWK. Let's say we're looking for the count of commas in a string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; string=&amp;quot;text,text,text,text&amp;quot;
 char=&amp;quot;,&amp;quot;
 echo &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; | awk -F&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; &amp;#39;{print …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Sometimes I need to know how many times a specific character occurs in a string. The best tool to use for something like that is AWK. Let's say we're looking for the count of commas in a string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; string=&amp;quot;text,text,text,text&amp;quot;
 char=&amp;quot;,&amp;quot;
 echo &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; | awk -F&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; &amp;#39;{print NF-1}&amp;#39;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Getting Rid of ^M Line Endings in a Text File"</title><link href="/getting-rid-of-m-line-endings-in-a-text-file.html" rel="alternate"></link><published>2017-10-30T22:01:00-05:00</published><updated>2017-10-30T22:01:00-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-10-30:/getting-rid-of-m-line-endings-in-a-text-file.html</id><summary type="html">&lt;p&gt;If you have a text file that has funny looking ^M characters at the end of each line, in most cases, you have to get rid of them before they can be used. This is especially the case when you've copied or transferred a file from a Windows-based system to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you have a text file that has funny looking ^M characters at the end of each line, in most cases, you have to get rid of them before they can be used. This is especially the case when you've copied or transferred a file from a Windows-based system to a &lt;em&gt;nix-based one. If these files are shell scripts meant to run on the &lt;/em&gt;nix-based system they more often than not won't work. There are various solutions to this problem.&lt;/p&gt;
&lt;p&gt;First, let's create two text files: one with ^M line endings and one without:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="k"&gt;for&lt;/span&gt; line in &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This is line &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;^M&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt;file1.txt&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
$ &lt;span class="k"&gt;for&lt;/span&gt; line in &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This is line &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt;file2.txt&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's see what's different between these two text files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -l
total &lt;span class="m"&gt;8&lt;/span&gt;
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; gszumo gszumo &lt;span class="m"&gt;80&lt;/span&gt; Oct &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:43 file1.txt
-rw-rw-r--. &lt;span class="m"&gt;1&lt;/span&gt; gszumo gszumo &lt;span class="m"&gt;75&lt;/span&gt; Oct &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;:44 file2.txt

$ file file1.txt
file1.txt: ASCII text, with CRLF line terminators

$ file file2.txt
file2.txt: ASCII text

$ diff file1.txt file2.txt
&lt;span class="m"&gt;1&lt;/span&gt;,5c1,5
&amp;lt; This is line &lt;span class="m"&gt;1&lt;/span&gt;
&amp;lt; This is line &lt;span class="m"&gt;2&lt;/span&gt;
&amp;lt; This is line &lt;span class="m"&gt;3&lt;/span&gt;
&amp;lt; This is line &lt;span class="m"&gt;4&lt;/span&gt;
&amp;lt; This is line &lt;span class="m"&gt;5&lt;/span&gt;
---
&amp;gt; This is line &lt;span class="m"&gt;1&lt;/span&gt;
&amp;gt; This is line &lt;span class="m"&gt;2&lt;/span&gt;
&amp;gt; This is line &lt;span class="m"&gt;3&lt;/span&gt;
&amp;gt; This is line &lt;span class="m"&gt;4&lt;/span&gt;
&amp;gt; This is line &lt;span class="m"&gt;5&lt;/span&gt;
$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What does this tell us?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The ls command tells us the file sizes are different even though the visible text is the same.&lt;/li&gt;
&lt;li&gt;The file command tells us that both files are ASCII text  but file1.txt has CRLF line terminators, and&lt;/li&gt;
&lt;li&gt;The diff command tells us that each line is indeed showing us that it's different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, how do we fix this?&lt;/p&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/file1-txt.png" title="Screen shot image"&gt;&lt;/p&gt;
&lt;p&gt;My favorite solution is to use vi or vim interactively. There are 2 easy ways to get rid of the ^M from a single file using vim:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter the command:
&lt;code&gt;:%s/^M//g&lt;/code&gt;
on the vim command line then save the file, or&lt;/li&gt;
&lt;li&gt;Enter the command:
&lt;code&gt;:fileformat=unix&lt;/code&gt;
on the vim command line and save the file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, if you have a whole directory or directory tree full of these kinds of files using vim on each one individually will become quite tedious. For this you need the scripting capability of the command line!&lt;/p&gt;
&lt;p&gt;The 'tr' command is one quick way of getting rid of them using the Linux or macOS command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat somefile | tr -d &amp;#39;^M&amp;#39; &amp;gt;outputfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can use this as a template in order to determine whether or not the file needs to be updated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for i in *
do
  string=$(file &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
  test &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="c1"&gt;#*&amp;#39;CRLF&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; != &amp;quot;&lt;span class="nv"&gt;$string&lt;/span&gt;&amp;quot; &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &amp;quot;CRLF found in &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;
done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the 'echo' part of this snippet only gets called when the first part of the test is true, so then we know that the file has '^M' line endings. We have to turn the second part of the test into a script that will massage the file to remove the line endings. Here's a bash snippet that will put the two together and do the job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for i in *
do
  string=$(file &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
  if [ &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="c1"&gt;#*&amp;#39;CRLF&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; != &amp;quot;&lt;span class="nv"&gt;$string&lt;/span&gt;&amp;quot; ];then
    cp &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.bak
    cat &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.bak|tr -d &amp;#39;^M&amp;#39; &amp;gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
    rm &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.bak
  fi
done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a bare-bones piece of code which doesn't do any error checking, which should be added in the event that the user running this script doesn't have the necessary permissions to copy, write or remove files that match the test.&lt;/p&gt;
&lt;p&gt;Remember, in order to create a '^M' character in the terminal hold down the CTRL key while  typing vm.&lt;/p&gt;
&lt;p&gt;You can also use 'ex' to replace a string in a file using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ex -s -c &amp;#39;%s/old-str/new-str/g|x&amp;#39; filename.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alternately, we can use sed to do the same thing. At the command line you can replace any string in a file dynamically by entering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i &amp;#39;s/old-str/new-str/&amp;#39; filename.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So to remove the ^M charaters just do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i &amp;#39;s/^M//&amp;#39; filename.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to remove the ^M characters. You can use the same for/do/done loop structure as mentioned above to iterate over multiple files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for i in *.txt
do
  sed -i &amp;#39;s/^M//&amp;#39; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;'Nuff said.&lt;/p&gt;</content></entry><entry><title>"Getting File Info From the MacOS Command Line"</title><link href="/getting-file-info-from-the-macos-command-line.html" rel="alternate"></link><published>2017-10-29T11:02:08-05:00</published><updated>2017-10-29T11:02:08-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-10-29:/getting-file-info-from-the-macos-command-line.html</id><summary type="html">&lt;p&gt;The mdls command lists file metadata. A sample below for a folder:
&lt;img alt="alt text" src="/images/mdls-training-folder.png" title="Screen shot image"&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The mdls command lists file metadata. A sample below for a folder:
&lt;img alt="alt text" src="/images/mdls-training-folder.png" title="Screen shot image"&gt;&lt;/p&gt;</content></entry><entry><title>"Installing Fedora on an Old Asus Laptop"</title><link href="/installing-fedora-on-an-old-asus-laptop.html" rel="alternate"></link><published>2017-10-22T21:34:06-05:00</published><updated>2017-10-22T21:34:06-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-10-22:/installing-fedora-on-an-old-asus-laptop.html</id><summary type="html">&lt;p&gt;I recently converted my old Asus laptop from Windows 10 to Linux (my "newest" laptop is a mid-2012 MacBook Pro, so you can see that I'm not really living on the "cutting edge" here). It's not that I don't like Windows (I have to use it at work and being …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently converted my old Asus laptop from Windows 10 to Linux (my "newest" laptop is a mid-2012 MacBook Pro, so you can see that I'm not really living on the "cutting edge" here). It's not that I don't like Windows (I have to use it at work and being a release engineer it is hard to avoid it completely) but it's free, has all of the software that I really need (except for video editing, which is still where my MacBook rules, and has always been my "go to" development and testing environment.&lt;/p&gt;
&lt;p&gt;These are the specs for the Asus:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intel® Pentium(R) CPU B950 @ 2.10GHz × 2&lt;/li&gt;
&lt;li&gt;3.8 GiB 64-bit&lt;/li&gt;
&lt;li&gt;Intel® Sandybridge Mobile graphics chip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you go to the &lt;a href="https://www.fedoraproject.com"&gt;fedoraproject.com&lt;/a&gt; website they have a unique utility called the "Fedora Media Writer" which allows you to create a Fedora installer on a USB device available to download and install on a Windows machine. This makes it very convenient to install Linux these days because more and more laptops are being made without internal CD/DVD drives. &lt;/p&gt;
&lt;p&gt;I didn't want to wipe my 120gb SSD Windows 10 installation so after writing the installer to a USB stick I replaced the Windows SSD with a blank 480gb Sandisk SSD.&lt;/p&gt;
&lt;p&gt;The installation went as expected and didn't really take all that long and when I rebooted I was in the basic Fedora Workstation environment. It was time to install the optional packages that I usually like to have. For this I googled and found &lt;a href="https://www.tecmint.com/things-to-do-after-fedora-26-installation/"&gt;Tecmint's 28 Things to Do After Fresh Installation of Fedora 26 Workstation&lt;/a&gt; and installed most but not all of their recommended packages and configurations.&lt;/p&gt;
&lt;p&gt;The next thing I needed to do was to get an SSH server running so that I could copy all of my media to the SSD. You can find out how to do that here: &lt;a href="http://bytefreaks.net/gnulinux/fedora-25-install-start-enable-ssh-server"&gt;Fedora 25: install / start / enable ssh server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once I had everything up and running there was an issue I encountered where I couldn't play any MP4 videos. Even VLC wouldn't work. Running the "Videos" application would recognize this and offer to install the necessary packages but after entering my password it would just sit there and do nothing. So I did some googling and found the proper command line way to do this here:
https://ask.fedoraproject.org/en/question/9111/sticky-what-plugins-do-i-need-to-install-to-watch-movies-and-listen-to-music/ and within minutes I was able to play my videos.&lt;/p&gt;</content></entry><entry><title>"Running Docker on Fedora 26 for the First Time"</title><link href="/running-docker-on-fedora-26-for-the-first-time.html" rel="alternate"></link><published>2017-10-15T21:48:02-05:00</published><updated>2017-10-15T21:48:02-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-10-15:/running-docker-on-fedora-26-for-the-first-time.html</id><summary type="html">&lt;p&gt;OK, so I want to start using docker on my Fedora laptop: How do we get started? Well, the Fedora Workstation page says that it comes with built-in Docker support so let's see if we can start it up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[gszumo@asus-laptop ~]$ which docker
/usr/bin/docker
[gszumo@asus-laptop ~]$ docker login …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;OK, so I want to start using docker on my Fedora laptop: How do we get started? Well, the Fedora Workstation page says that it comes with built-in Docker support so let's see if we can start it up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[gszumo@asus-laptop ~]$ which docker
/usr/bin/docker
[gszumo@asus-laptop ~]$ docker login
/usr/bin/docker: line 13: /usr/bin/docker-latest: No such file or directory
[gszumo@asus-laptop ~]$ docker image pull nginx
/usr/bin/docker: line 13: /usr/bin/docker-latest: No such file or directory
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OK, so that's weird. Apparently not everything works as advertised. The command line tells me that there's a docker command installed on the laptop by default but it doesn't see to do anything that I want. So, let's try to (re-)install docker to see if that helps:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[gszumo@asus-laptop ~]$ sudo dnf install docker
[sudo] password for gszumo: 
Last metadata expiration check: 0:36:07 ago on Sun 15 Oct 2017 08:11:13 AM EDT.
Dependencies resolved.
================================================================================
 Package                   Arch    Version                       Repository
                                                                           Size
================================================================================
Installing:
 docker                    x86_64  2:1.13.1-22.gitb5e3294.fc26   updates   20 M
Installing dependencies:
 atomic-registries         x86_64  1.18.1-5.fc26                 fedora    45 k
 container-selinux         noarch  2:2.24-1.fc26                 updates   33 k
 container-storage-setup   noarch  0.8.0-1.git1d27ecf.fc26       updates   36 k
 docker-rhel-push-plugin   x86_64  2:1.13.1-22.gitb5e3294.fc26   updates  1.6 M
 libnet                    x86_64  1.1.6-12.fc26                 fedora    63 k
 libyaml                   x86_64  0.1.7-2.fc26                  fedora    57 k
 oci-umount                x86_64  2:2.0.0-2.gitf90b64c.fc26     updates   30 k
 python-rhsm-certificates  x86_64  1.20.1-1.fc26                 updates   44 k
 skopeo-containers         x86_64  0.1.23-6.git1bbd87f.fc26      updates   13 k
Installing weak dependencies:
 criu                      x86_64  3.5-1.fc26                    updates  450 k
 oci-register-machine      x86_64  0-5.11.gitcd1e331.fc26        updates  1.0 M
 oci-systemd-hook          x86_64  1:0.1.13-1.gitafe4b4a.fc26    updates   35 k

Transaction Summary
================================================================================
Install  13 Packages

Total download size: 23 M
Installed size: 78 M
Is this ok [y/N]: y
Downloading Packages:
(1/13): atomic-registries-1.18.1-5.fc26.x86_64.rpm             179 kB/s |  45 kB     00:00    
(2/13): libyaml-0.1.7-2.fc26.x86_64.rpm                        209 kB/s |  57 kB     00:00    
(3/13): docker-rhel-push-plugin-1.13.1-22.gitb5e3294.fc26.x86_ 2.1 MB/s | 1.6 MB     00:00    
(4/13): container-selinux-2.24-1.fc26.noarch.rpm               129 kB/s |  33 kB     00:00    
(5/13): container-storage-setup-0.8.0-1.git1d27ecf.fc26.noarch 812 kB/s |  36 kB     00:00    
(6/13): oci-umount-2.0.0-2.gitf90b64c.fc26.x86_64.rpm          527 kB/s |  30 kB     00:00    
(7/13): python-rhsm-certificates-1.20.1-1.fc26.x86_64.rpm      730 kB/s |  44 kB     00:00    
(8/13): skopeo-containers-0.1.23-6.git1bbd87f.fc26.x86_64.rpm  295 kB/s |  13 kB     00:00    
(9/13): criu-3.5-1.fc26.x86_64.rpm                             1.9 MB/s | 450 kB     00:00    
(10/13): oci-systemd-hook-0.1.13-1.gitafe4b4a.fc26.x86_64.rpm  648 kB/s |  35 kB     00:00    
(11/13): libnet-1.1.6-12.fc26.x86_64.rpm                       165 kB/s |  63 kB     00:00    
(12/13): oci-register-machine-0-5.11.gitcd1e331.fc26.x86_64.rp 1.9 MB/s | 1.0 MB     00:00    
(13/13): docker-1.13.1-22.gitb5e3294.fc26.x86_64.rpm           3.0 MB/s |  20 MB     00:06    
-----------------------------------------------------------------------------------------------
Total                                                          3.0 MB/s |  23 MB     00:07     
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                       1/1 
  Installing       : libnet-1.1.6-12.fc26.x86_64                                          1/13 
  Running scriptlet: libnet-1.1.6-12.fc26.x86_64                                          1/13 
  Installing       : skopeo-containers-0.1.23-6.git1bbd87f.fc26.x86_64                    2/13 
  Installing       : python-rhsm-certificates-1.20.1-1.fc26.x86_64                        3/13 
  Installing       : oci-umount-2:2.0.0-2.gitf90b64c.fc26.x86_64                          4/13 
  Installing       : container-storage-setup-0.8.0-1.git1d27ecf.fc26.noarch               5/13 
  Installing       : container-selinux-2:2.24-1.fc26.noarch                               6/13 
  Running scriptlet: container-selinux-2:2.24-1.fc26.noarch                               6/13 
  Installing       : libyaml-0.1.7-2.fc26.x86_64                                          7/13 
  Running scriptlet: libyaml-0.1.7-2.fc26.x86_64                                          7/13 
  Installing       : atomic-registries-1.18.1-5.fc26.x86_64                               8/13 
  Installing       : docker-rhel-push-plugin-2:1.13.1-22.gitb5e3294.fc26.x86_64           9/13 
  Running scriptlet: docker-rhel-push-plugin-2:1.13.1-22.gitb5e3294.fc26.x86_64           9/13 
  Installing       : docker-2:1.13.1-22.gitb5e3294.fc26.x86_64                           10/13 
  Running scriptlet: docker-2:1.13.1-22.gitb5e3294.fc26.x86_64                           10/13 
  Installing       : criu-3.5-1.fc26.x86_64                                              11/13 
  Running scriptlet: criu-3.5-1.fc26.x86_64                                              11/13 
  Installing       : oci-register-machine-0-5.11.gitcd1e331.fc26.x86_64                  12/13 
  Installing       : oci-systemd-hook-1:0.1.13-1.gitafe4b4a.fc26.x86_64                  13/13 
  Running scriptlet: docker-2:1.13.1-22.gitb5e3294.fc26.x86_64                           13/13 
  Running scriptlet: oci-systemd-hook-1:0.1.13-1.gitafe4b4a.fc26.x86_64                  13/13 
  Verifying        : docker-2:1.13.1-22.gitb5e3294.fc26.x86_64                            1/13 
  Verifying        : docker-rhel-push-plugin-2:1.13.1-22.gitb5e3294.fc26.x86_64           2/13 
  Verifying        : atomic-registries-1.18.1-5.fc26.x86_64                               3/13 
  Verifying        : libyaml-0.1.7-2.fc26.x86_64                                          4/13 
  Verifying        : container-selinux-2:2.24-1.fc26.noarch                               5/13 
  Verifying        : container-storage-setup-0.8.0-1.git1d27ecf.fc26.noarch               6/13 
  Verifying        : oci-umount-2:2.0.0-2.gitf90b64c.fc26.x86_64                          7/13 
  Verifying        : python-rhsm-certificates-1.20.1-1.fc26.x86_64                        8/13 
  Verifying        : skopeo-containers-0.1.23-6.git1bbd87f.fc26.x86_64                    9/13 
  Verifying        : criu-3.5-1.fc26.x86_64                                              10/13 
  Verifying        : libnet-1.1.6-12.fc26.x86_64                                         11/13 
  Verifying        : oci-systemd-hook-1:0.1.13-1.gitafe4b4a.fc26.x86_64                  12/13 
  Verifying        : oci-register-machine-0-5.11.gitcd1e331.fc26.x86_64                  13/13 

Installed:
  docker.x86_64 2:1.13.1-22.gitb5e3294.fc26                                                    
  criu.x86_64 3.5-1.fc26                                                                       
  oci-register-machine.x86_64 0-5.11.gitcd1e331.fc26                                           
  oci-systemd-hook.x86_64 1:0.1.13-1.gitafe4b4a.fc26                                           
  atomic-registries.x86_64 1.18.1-5.fc26                                                       
  container-selinux.noarch 2:2.24-1.fc26                                                       
  container-storage-setup.noarch 0.8.0-1.git1d27ecf.fc26                                       
  docker-rhel-push-plugin.x86_64 2:1.13.1-22.gitb5e3294.fc26                                   
  libnet.x86_64 1.1.6-12.fc26                                                                  
  libyaml.x86_64 0.1.7-2.fc26                                                                  
  oci-umount.x86_64 2:2.0.0-2.gitf90b64c.fc26                                                  
  python-rhsm-certificates.x86_64 1.20.1-1.fc26                                                
  skopeo-containers.x86_64 0.1.23-6.git1bbd87f.fc26                                            

Complete!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So now lets fire it up and see what happens:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[gszumo@asus-laptop ~]$ sudo systemctl start docker
[gszumo@asus-laptop ~]$ sudo docker run hello-world
Unable to find image &amp;#39;hello-world:latest&amp;#39; locally
Trying to pull repository registry.fedoraproject.org/hello-world ... 
Trying to pull repository registry.access.redhat.com/hello-world ... 
Trying to pull repository docker.io/library/hello-world ... 
sha256:07d5f7800dfe37b8c2196c7b1c524c33808ce2e0f74e7aa00e603295ca9a0972: Pulling from docker.io/library/hello-world
5b0f327be733: Pull complete 
Digest: sha256:07d5f7800dfe37b8c2196c7b1c524c33808ce2e0f74e7aa00e603295ca9a0972
Status: Downloaded newer image for docker.io/hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://cloud.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Bingo, we're good to go. Let's setup the daemon so that it survives a reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[gszumo@asus-laptop ~]$ sudo systemctl enable docker
[sudo] password for gszumo: 
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service -&amp;gt; /usr/lib/systemd/system/docker.service.
[gszumo@asus-laptop ~]$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we're ready to rock 'n roll!&lt;/p&gt;</content></entry><entry><title>"Sort Directory by File Size"</title><link href="/sort-directory-by-file-size.html" rel="alternate"></link><published>2017-03-04T21:55:12-05:00</published><updated>2017-03-04T21:55:12-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-03-04:/sort-directory-by-file-size.html</id><summary type="html">&lt;p&gt;To sort files in a directory and to list them by the biggest file first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ du -a &lt;span class="p"&gt;|&lt;/span&gt; sort -n -r &lt;span class="p"&gt;|&lt;/span&gt; more
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To sort files in a directory and to list them by the biggest file first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ du -a &lt;span class="p"&gt;|&lt;/span&gt; sort -n -r &lt;span class="p"&gt;|&lt;/span&gt; more
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Get the Hash of a File on Different Operating Systems"</title><link href="/get-the-hash-of-a-file-on-different-operating-systems.html" rel="alternate"></link><published>2017-03-03T09:13:51-05:00</published><updated>2017-03-03T09:13:51-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-03-03:/get-the-hash-of-a-file-on-different-operating-systems.html</id><summary type="html">&lt;p&gt;Sometimes you just need to hash something. Here are some command lines to do just that.&lt;/p&gt;
&lt;p&gt;Windows PowerShell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Get-FileHash C:\path\to\file.iso -Algorithm [MD5|SHA1|SHA256|SHA384|SHA512|MACTripleDES|RIPEMD160]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(SHA256 is the default if the parameter is omitted) &lt;/p&gt;
&lt;p&gt;Linux: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;md5sum /path/to/file
sha1sum /path/to/file …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Sometimes you just need to hash something. Here are some command lines to do just that.&lt;/p&gt;
&lt;p&gt;Windows PowerShell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Get-FileHash C:\path\to\file.iso -Algorithm [MD5|SHA1|SHA256|SHA384|SHA512|MACTripleDES|RIPEMD160]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(SHA256 is the default if the parameter is omitted) &lt;/p&gt;
&lt;p&gt;Linux: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;md5sum /path/to/file
sha1sum /path/to/file
sha256sum /path/to/file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;macOS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MD5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="sr"&gt;/path/to/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;SHA1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shasum&lt;/span&gt; &lt;span class="sr"&gt;/path/to/file or shasum -a 1 /path/to/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;SHA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shasum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;256&lt;/span&gt; &lt;span class="sr"&gt;/path/to/&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Alternative to Using cp"</title><link href="/alternative-to-using-cp.html" rel="alternate"></link><published>2017-02-09T09:21:02-05:00</published><updated>2017-02-09T09:21:02-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2017-02-09:/alternative-to-using-cp.html</id><summary type="html">&lt;p&gt;To backup files from a source directory to a backup directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir /path/to/backup/directory
$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/source/directory
$ tar cf - . &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/backup/directory &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar xBvf -&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Define the following alias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar cvf - . | ( cd \!* ; tar xvf - )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or as an alias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias cpbytar=&amp;#39;tar cvf - . | ( cd \!* ; tar xvf - )&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To backup files from a source directory to a backup directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir /path/to/backup/directory
$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/source/directory
$ tar cf - . &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/backup/directory &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar xBvf -&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Define the following alias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar cvf - . | ( cd \!* ; tar xvf - )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or as an alias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias cpbytar=&amp;#39;tar cvf - . | ( cd \!* ; tar xvf - )&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(The alias definition above is for Bash)&lt;/p&gt;
&lt;p&gt;To do a recursive copy of a directory to another location, preserving the PERMISSIONS and OWNERSHIP of the files.  "cd" to the source location and invoke the following alias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cpbytar
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Removing ^M Characters From Multiple Files"</title><link href="/removing-m-characters-from-multiple-files.html" rel="alternate"></link><published>2016-07-05T11:06:20-05:00</published><updated>2016-07-05T11:06:20-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-07-05:/removing-m-characters-from-multiple-files.html</id><summary type="html">&lt;p&gt;In my day job I find that I frequently need to remove those pesky '^M' line endings from text files that are transferred from one system to the other. Most of the time it is just one file that needs to be fixed so going into vi and typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:%s …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;In my day job I find that I frequently need to remove those pesky '^M' line endings from text files that are transferred from one system to the other. Most of the time it is just one file that needs to be fixed so going into vi and typing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:%s/^M//g
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;solves the problem, but on occasion I might be confronted with performing this process on multiple files and sometimes recursively through many subdirectories. When that happens it becomes necessary to bring out the "big guns" and do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="k"&gt;for&lt;/span&gt; file in &lt;span class="k"&gt;$(&lt;/span&gt;find /path/to/dir -type f&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      tr -d &lt;span class="s1"&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt;&lt;span class="nv"&gt;$file&lt;/span&gt; &amp;gt;temp.&lt;span class="nv"&gt;$$&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv temp.&lt;span class="nv"&gt;$$&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
   &lt;span class="k"&gt;done&lt;/span&gt;
$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(BTW, to generate a ^M character using the PuTTY emulator is easy. Just press CTRL-^ followed by CTRL-M)&lt;/p&gt;
&lt;p&gt;Of course, in Linux, UNIX and AIX shells there are many ways to skin a cat and this is just one of many possible solutions. This solution was found on [another Blogspot site] (https://dailyvim.blogspot.com) which has more very interesting tips &amp;amp; tutorials.&lt;/p&gt;</content></entry><entry><title>"Create a USB Installer for OS X El Capitan"</title><link href="/create-a-usb-installer-for-os-x-el-capitan.html" rel="alternate"></link><published>2016-05-31T11:19:58-05:00</published><updated>2016-05-31T11:19:58-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-05-31:/create-a-usb-installer-for-os-x-el-capitan.html</id><summary type="html">&lt;p&gt;Here's a command line method to create a USB installer for OS X El Capitan:&lt;/p&gt;
&lt;p&gt;Requirements:
A blank USB drive that is at least 8GB in size.
The El Capitan installer, which you can download for free from the Apple App Store.
Steps:
Place the USB stick in you Mac …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here's a command line method to create a USB installer for OS X El Capitan:&lt;/p&gt;
&lt;p&gt;Requirements:
A blank USB drive that is at least 8GB in size.
The El Capitan installer, which you can download for free from the Apple App Store.
Steps:
Place the USB stick in you Mac. It will probably show up in the sidebar as "Untitled". Rename it to something more memorable by right-clicking (or 2 finger tap) on it and select "Rename..." from the dialog. In my example, I have renamed it to "ElCapitan" (without the quotes).
Open Terminal (or iTerm if you prefer that) and enter the following command changing the "/Volumes/ElCapitan" to "/Volumes/". Please note that this is a single command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /Applications/Install&lt;span class="se"&gt;\ &lt;/span&gt;OS&lt;span class="se"&gt;\ &lt;/span&gt;X&lt;span class="se"&gt;\ &lt;/span&gt;El&lt;span class="se"&gt;\ &lt;/span&gt;Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/ElCapitan --applicationpath /Applications/Install&lt;span class="se"&gt;\ &lt;/span&gt;OS&lt;span class="se"&gt;\ &lt;/span&gt;X&lt;span class="se"&gt;\ &lt;/span&gt;El&lt;span class="se"&gt;\ &lt;/span&gt;Capitan.app --nointeraction
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Erasing&lt;/span&gt; &lt;span class="n"&gt;Disk&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%...&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;%...&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%...&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;%...&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%...&lt;/span&gt;
&lt;span class="n"&gt;Copying&lt;/span&gt; &lt;span class="n"&gt;installer&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Copy&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Making&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="n"&gt;bootable&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Copying&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Copy&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Fixing Screen Resolution on Second Monitor in Linux"</title><link href="/fixing-screen-resolution-on-second-monitor-in-linux.html" rel="alternate"></link><published>2016-04-03T11:48:44-05:00</published><updated>2016-04-03T11:48:44-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-03:/fixing-screen-resolution-on-second-monitor-in-linux.html</id><summary type="html">&lt;p&gt;I recently installed a 2nd hard drive in my Macbook Pro dedicated to Linux. When I hooked up a secondary monitor to it I found that I could not get a reasonable resolution. After some research I found that I can add a new mode to the "Display" choices by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently installed a 2nd hard drive in my Macbook Pro dedicated to Linux. When I hooked up a secondary monitor to it I found that I could not get a reasonable resolution. After some research I found that I can add a new mode to the "Display" choices by entering the following in a terminal console:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xrandr # to find the device name
cvt 1920 1080 # to generate the mode for the xrandr program.
xrandr --newmode &amp;quot;1920x1080_60.00&amp;quot; 173.00 1920 2048 2248 2576 1080 1083 1088 1120 -hsync +vsync # to add the new mode to the monitor choices.
xrandr --addmode DP1 1920x1080_60.00 # to associate the new mode to the monitor.
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"git Tips"</title><link href="/git-tips.html" rel="alternate"></link><published>2016-04-03T11:43:37-05:00</published><updated>2016-04-03T11:43:37-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-03:/git-tips.html</id><summary type="html">&lt;p&gt;A useful tip to beautify your output is to use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  git log --oneline --decorate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;when looking at your log entries.&lt;/p&gt;</summary><content type="html">&lt;p&gt;A useful tip to beautify your output is to use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  git log --oneline --decorate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;when looking at your log entries.&lt;/p&gt;</content></entry><entry><title>"Uptime Statistics for Windows"</title><link href="/uptime-statistics-for-windows.html" rel="alternate"></link><published>2016-04-03T11:40:14-05:00</published><updated>2016-04-03T11:40:14-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-03:/uptime-statistics-for-windows.html</id><summary type="html">&lt;p&gt;To find the uptime for a Windows machine do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  C:&amp;gt; net statistics server
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To find the uptime for a Windows machine do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  C:&amp;gt; net statistics server
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Gnome3 Menu Icons"</title><link href="/gnome3-menu-icons.html" rel="alternate"></link><published>2016-04-02T12:09:27-05:00</published><updated>2016-04-02T12:09:27-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-02:/gnome3-menu-icons.html</id><summary type="html">&lt;p&gt;To add your own menu icons to a GNOME3 environment check out this link: [Desktop files: putting your application in the desktop menus]
(https://developer.gnome.org/integration-guide/stable/desktop-files.html.en)&lt;/p&gt;</summary><content type="html">&lt;p&gt;To add your own menu icons to a GNOME3 environment check out this link: [Desktop files: putting your application in the desktop menus]
(https://developer.gnome.org/integration-guide/stable/desktop-files.html.en)&lt;/p&gt;</content></entry><entry><title>"Copy Entire Directory Structure Using Tar"</title><link href="/copy-entire-directory-structure-using-tar.html" rel="alternate"></link><published>2016-04-02T11:56:07-05:00</published><updated>2016-04-02T11:56:07-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-02:/copy-entire-directory-structure-using-tar.html</id><summary type="html">&lt;p&gt;Sometimes you need to copy an entire directory structure to another location on the command line. Here is a quick way to do it using the tar command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar cf - * | ( cd /target; tar xfp -)
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Sometimes you need to copy an entire directory structure to another location on the command line. Here is a quick way to do it using the tar command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar cf - * | ( cd /target; tar xfp -)
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Talkin' Trash"</title><link href="/talkin-trash.html" rel="alternate"></link><published>2016-04-02T11:56:07-05:00</published><updated>2016-04-02T11:56:07-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-02:/talkin-trash.html</id><summary type="html">&lt;p&gt;Having trouble getting the "Empty Trash" working in Thunar? Remove &lt;code&gt;"~/.config/xfce4/xfconf/xfce-perchannel-xml/thunar*"&lt;/code&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Having trouble getting the "Empty Trash" working in Thunar? Remove &lt;code&gt;"~/.config/xfce4/xfconf/xfce-perchannel-xml/thunar*"&lt;/code&gt;.&lt;/p&gt;</content></entry><entry><title>"Eject a CD/DVD on a Mac"</title><link href="/eject-a-cddvd-on-a-mac.html" rel="alternate"></link><published>2016-04-01T12:23:27-05:00</published><updated>2016-04-01T12:23:27-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-01:/eject-a-cddvd-on-a-mac.html</id><summary type="html">&lt;p&gt;To eject a CD or DVD from the command line use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cdcontrol -f /dev/cd0 eject
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To eject a CD or DVD from the command line use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cdcontrol -f /dev/cd0 eject
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Set Mac Hostname"</title><link href="/set-mac-hostname.html" rel="alternate"></link><published>2016-04-01T12:21:54-05:00</published><updated>2016-04-01T12:21:54-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-01:/set-mac-hostname.html</id><summary type="html">&lt;p&gt;To set the host name of your Mac (in my case macbook-pro) in the command prompt, type the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo scutil --set HostName &lt;span class="s2"&gt;&amp;quot;macbook-pro&amp;quot;&lt;/span&gt;
$ sudo scutil --set LocalHostName &lt;span class="s2"&gt;&amp;quot;macbook-pro&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;To set the host name of your Mac (in my case macbook-pro) in the command prompt, type the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo scutil --set HostName &lt;span class="s2"&gt;&amp;quot;macbook-pro&amp;quot;&lt;/span&gt;
$ sudo scutil --set LocalHostName &lt;span class="s2"&gt;&amp;quot;macbook-pro&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"Reset Mac Launchpad"</title><link href="/reset-mac-launchpad.html" rel="alternate"></link><published>2016-04-01T12:19:44-05:00</published><updated>2016-04-01T12:19:44-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-04-01:/reset-mac-launchpad.html</id><summary type="html">&lt;p&gt;To reset the Mac LaunchPad to default enter the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm ~/Library/Application\ Support/Dock/*.db ; killall Dock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will however put all of the Apple apps on the first page and all of your remaining apps will be sorted alphabetically on the remaining pages.&lt;/p&gt;</summary><content type="html">&lt;p&gt;To reset the Mac LaunchPad to default enter the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm ~/Library/Application\ Support/Dock/*.db ; killall Dock
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will however put all of the Apple apps on the first page and all of your remaining apps will be sorted alphabetically on the remaining pages.&lt;/p&gt;</content></entry><entry><title>"Learning the Command Line"</title><link href="/learning-the-command-line.html" rel="alternate"></link><published>2016-01-30T11:51:00-05:00</published><updated>2016-01-30T11:51:00-05:00</updated><author><name>Gregg Szumowski</name></author><id>tag:None,2016-01-30:/learning-the-command-line.html</id><summary type="html">&lt;p&gt;A good beginner's article on using the command line to manage your files can be found [here]
(http://www.linux.com/learn/tutorials/842251-must-know-linux-commands-for-new-users)&lt;/p&gt;</summary><content type="html">&lt;p&gt;A good beginner's article on using the command line to manage your files can be found [here]
(http://www.linux.com/learn/tutorials/842251-must-know-linux-commands-for-new-users)&lt;/p&gt;</content></entry></feed>